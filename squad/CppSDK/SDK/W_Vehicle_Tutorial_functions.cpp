#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Vehicle_Tutorial

#include "Basic.hpp"

#include "W_Vehicle_Tutorial_classes.hpp"
#include "W_Vehicle_Tutorial_parameters.hpp"


namespace SDK
{

// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.ExecuteUbergraph_W_Vehicle_Tutorial
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Vehicle_Tutorial_C::ExecuteUbergraph_W_Vehicle_Tutorial(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Vehicle_Tutorial_C", "ExecuteUbergraph_W_Vehicle_Tutorial");

	Params::W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.PawnChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            NewPawn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Vehicle_Tutorial_C::PawnChanged(class APawn* NewPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Vehicle_Tutorial_C", "PawnChanged");

	Params::W_Vehicle_Tutorial_C_PawnChanged Parms{};

	Parms.NewPawn = NewPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Vehicle_Tutorial_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Vehicle_Tutorial_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.Refresh Vehicle Reference
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQVehicle*                       NewVehicle                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Vehicle_Tutorial_C::Refresh_Vehicle_Reference(class ASQVehicle* NewVehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Vehicle_Tutorial_C", "Refresh Vehicle Reference");

	Params::W_Vehicle_Tutorial_C_Refresh_Vehicle_Reference Parms{};

	Parms.NewVehicle = NewVehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.Refresh Visibility
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Vehicle_Tutorial_C::Refresh_Visibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Vehicle_Tutorial_C", "Refresh Visibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.Set Engine Text
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_Vehicle_Tutorial_C::Set_Engine_Text()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Vehicle_Tutorial_C", "Set Engine Text");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.CanDesignateForSeat
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   InSeatIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Can_Designate                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_Vehicle_Tutorial_C::CanDesignateForSeat(int32 InSeatIndex, bool* Can_Designate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Vehicle_Tutorial_C", "CanDesignateForSeat");

	Params::W_Vehicle_Tutorial_C_CanDesignateForSeat Parms{};

	Parms.InSeatIndex = InSeatIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Can_Designate != nullptr)
		*Can_Designate = Parms.Can_Designate;
}


// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.Set ATGM Tips
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_Vehicle_Tutorial_C::Set_ATGM_Tips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Vehicle_Tutorial_C", "Set ATGM Tips");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.OnProjectileSpawned
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQProjectile*                    SpawnedProjectile                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Vehicle_Tutorial_C::OnProjectileSpawned(class ASQProjectile* SpawnedProjectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Vehicle_Tutorial_C", "OnProjectileSpawned");

	Params::W_Vehicle_Tutorial_C_OnProjectileSpawned Parms{};

	Parms.SpawnedProjectile = SpawnedProjectile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.HandleProjectileLostGuidance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQGuidanceComponent*             GuidanceComponent_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGuidanceLossReason                     LossReason                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Vehicle_Tutorial_C::HandleProjectileLostGuidance(class USQGuidanceComponent* GuidanceComponent_0, const EGuidanceLossReason LossReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Vehicle_Tutorial_C", "HandleProjectileLostGuidance");

	Params::W_Vehicle_Tutorial_C_HandleProjectileLostGuidance Parms{};

	Parms.GuidanceComponent_0 = GuidanceComponent_0;
	Parms.LossReason = LossReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.DetermineAtgmProperties
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASQVehicleWeaponTOW*              InWeapon                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSet<EATGMProperties>                   OutProperties                                          (Parm, OutParm)

void UW_Vehicle_Tutorial_C::DetermineAtgmProperties(class ASQVehicleWeaponTOW* InWeapon, TSet<EATGMProperties>* OutProperties)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Vehicle_Tutorial_C", "DetermineAtgmProperties");

	Params::W_Vehicle_Tutorial_C_DetermineAtgmProperties Parms{};

	Parms.InWeapon = InWeapon;

	UObject::ProcessEvent(Func, &Parms);

	if (OutProperties != nullptr)
		*OutProperties = std::move(Parms.OutProperties);
}


// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.Unbind Vehicle Delegates
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Vehicle_Tutorial_C::Unbind_Vehicle_Delegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Vehicle_Tutorial_C", "Unbind Vehicle Delegates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.On Seat Changed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQSoldier*                       Soldier_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USQVehicleSeatComponent*          FromSeat                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USQVehicleSeatComponent*          ToSeat                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Vehicle_Tutorial_C::On_Seat_Changed(class ASQSoldier* Soldier_0, class USQVehicleSeatComponent* FromSeat, class USQVehicleSeatComponent* ToSeat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Vehicle_Tutorial_C", "On Seat Changed");

	Params::W_Vehicle_Tutorial_C_On_Seat_Changed Parms{};

	Parms.Soldier_0 = Soldier_0;
	Parms.FromSeat = FromSeat;
	Parms.ToSeat = ToSeat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.OnSwitchWeapon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQEquipableItem*                 SwitchedToItem                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Vehicle_Tutorial_C::OnSwitchWeapon(class ASQEquipableItem* SwitchedToItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Vehicle_Tutorial_C", "OnSwitchWeapon");

	Params::W_Vehicle_Tutorial_C_OnSwitchWeapon Parms{};

	Parms.SwitchedToItem = SwitchedToItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.SetSoldier
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQSoldier*                       NewSoldier                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Vehicle_Tutorial_C::SetSoldier(class ASQSoldier* NewSoldier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Vehicle_Tutorial_C", "SetSoldier");

	Params::W_Vehicle_Tutorial_C_SetSoldier Parms{};

	Parms.NewSoldier = NewSoldier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.ShouldShowZoomWhileADSKey
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASQVehicle*                       Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USQVehicleSeatComponent*          VehicleSeat                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldShowZoomWhileADSKey_0                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_Vehicle_Tutorial_C::ShouldShowZoomWhileADSKey(class ASQVehicle* Vehicle, class USQVehicleSeatComponent* VehicleSeat, bool* ShouldShowZoomWhileADSKey_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Vehicle_Tutorial_C", "ShouldShowZoomWhileADSKey");

	Params::W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey Parms{};

	Parms.Vehicle = Vehicle;
	Parms.VehicleSeat = VehicleSeat;

	UObject::ProcessEvent(Func, &Parms);

	if (ShouldShowZoomWhileADSKey_0 != nullptr)
		*ShouldShowZoomWhileADSKey_0 = Parms.ShouldShowZoomWhileADSKey_0;
}


// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.ShouldShowFocusZoomKey
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASQVehicle*                       Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USQVehicleSeatComponent*          VehicleSeat                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldShowFocusZoomKey_0                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_Vehicle_Tutorial_C::ShouldShowFocusZoomKey(class ASQVehicle* Vehicle, class USQVehicleSeatComponent* VehicleSeat, bool* ShouldShowFocusZoomKey_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Vehicle_Tutorial_C", "ShouldShowFocusZoomKey");

	Params::W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey Parms{};

	Parms.Vehicle = Vehicle;
	Parms.VehicleSeat = VehicleSeat;

	UObject::ProcessEvent(Func, &Parms);

	if (ShouldShowFocusZoomKey_0 != nullptr)
		*ShouldShowFocusZoomKey_0 = Parms.ShouldShowFocusZoomKey_0;
}


// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.RefreshWeapon
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Vehicle_Tutorial_C::RefreshWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Vehicle_Tutorial_C", "RefreshWeapon");

	UObject::ProcessEvent(Func, nullptr);
}

}

