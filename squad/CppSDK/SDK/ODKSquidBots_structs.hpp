#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ODKSquidBots

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct ODKSquidBots.ODKAssociatedWeaponClass
// 0x0010 (0x0010 - 0x0000)
struct FODKAssociatedWeaponClass final
{
public:
	TSubclassOf<class AActor>                     BaseWeaponClass;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AODKGenericItem>            SquidBotsItemClass;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FODKAssociatedWeaponClass) == 0x000008, "Wrong alignment on FODKAssociatedWeaponClass");
static_assert(sizeof(FODKAssociatedWeaponClass) == 0x000010, "Wrong size on FODKAssociatedWeaponClass");
static_assert(offsetof(FODKAssociatedWeaponClass, BaseWeaponClass) == 0x000000, "Member 'FODKAssociatedWeaponClass::BaseWeaponClass' has a wrong offset!");
static_assert(offsetof(FODKAssociatedWeaponClass, SquidBotsItemClass) == 0x000008, "Member 'FODKAssociatedWeaponClass::SquidBotsItemClass' has a wrong offset!");

// ScriptStruct ODKSquidBots.ODKNetSerializedObject
// 0x0018 (0x0018 - 0x0000)
struct FODKNetSerializedObject final
{
public:
	TSubclassOf<class UObject>                    Class;                                             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Bytes;                                             // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FODKNetSerializedObject) == 0x000008, "Wrong alignment on FODKNetSerializedObject");
static_assert(sizeof(FODKNetSerializedObject) == 0x000018, "Wrong size on FODKNetSerializedObject");
static_assert(offsetof(FODKNetSerializedObject, Class) == 0x000000, "Member 'FODKNetSerializedObject::Class' has a wrong offset!");
static_assert(offsetof(FODKNetSerializedObject, Bytes) == 0x000008, "Member 'FODKNetSerializedObject::Bytes' has a wrong offset!");

}

