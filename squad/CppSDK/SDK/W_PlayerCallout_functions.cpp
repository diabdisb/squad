#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PlayerCallout

#include "Basic.hpp"

#include "W_PlayerCallout_classes.hpp"
#include "W_PlayerCallout_parameters.hpp"


namespace SDK
{

// Function W_PlayerCallout.W_PlayerCallout_C.ExecuteUbergraph_W_PlayerCallout
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PlayerCallout_C::ExecuteUbergraph_W_PlayerCallout(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PlayerCallout_C", "ExecuteUbergraph_W_PlayerCallout");

	Params::W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PlayerCallout.W_PlayerCallout_C.FillFlag
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UW_PlayerCallout_C::FillFlag(TSoftObjectPtr<class UTexture2D> Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PlayerCallout_C", "FillFlag");

	Params::W_PlayerCallout_C_FillFlag Parms{};

	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PlayerCallout.W_PlayerCallout_C.OnLoaded_E7B2E94948BEA97E3E0D34A65BC387B8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PlayerCallout_C::OnLoaded_E7B2E94948BEA97E3E0D34A65BC387B8(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PlayerCallout_C", "OnLoaded_E7B2E94948BEA97E3E0D34A65BC387B8");

	Params::W_PlayerCallout_C_OnLoaded_E7B2E94948BEA97E3E0D34A65BC387B8 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PlayerCallout.W_PlayerCallout_C.Setup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             TopText_0                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// TSoftObjectPtr<class UTexture2D>        ImageRef                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FText                             BottomText_0                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             InTooltip                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             InAdditionalText                                       (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_PlayerCallout_C::Setup(const class FText& TopText_0, TSoftObjectPtr<class UTexture2D> ImageRef, const class FText& BottomText_0, const class FText& InTooltip, const class FText& InAdditionalText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PlayerCallout_C", "Setup");

	Params::W_PlayerCallout_C_Setup Parms{};

	Parms.TopText_0 = std::move(TopText_0);
	Parms.ImageRef = ImageRef;
	Parms.BottomText_0 = std::move(BottomText_0);
	Parms.InTooltip = std::move(InTooltip);
	Parms.InAdditionalText = std::move(InAdditionalText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PlayerCallout.W_PlayerCallout_C.GetMainTooltipWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidget* UW_PlayerCallout_C::GetMainTooltipWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PlayerCallout_C", "GetMainTooltipWidget");

	Params::W_PlayerCallout_C_GetMainTooltipWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_PlayerCallout.W_PlayerCallout_C.SetTextPadding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMargin                          InPadding                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_PlayerCallout_C::SetTextPadding(const struct FMargin& InPadding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PlayerCallout_C", "SetTextPadding");

	Params::W_PlayerCallout_C_SetTextPadding Parms{};

	Parms.InPadding = std::move(InPadding);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PlayerCallout.W_PlayerCallout_C.UpdateBottomText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             NewText                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_PlayerCallout_C::UpdateBottomText(const class FText& NewText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PlayerCallout_C", "UpdateBottomText");

	Params::W_PlayerCallout_C_UpdateBottomText Parms{};

	Parms.NewText = std::move(NewText);

	UObject::ProcessEvent(Func, &Parms);
}

}

