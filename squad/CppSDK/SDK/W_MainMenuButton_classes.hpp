#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MainMenuButton

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_MainMenuButton.W_MainMenuButton_C
// 0x02C0 (0x0520 - 0x0260)
class UW_MainMenuButton_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Press;                                             // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button;                                            // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CornerIcon;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              IconScaleBox;                                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                MainBorder;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         MainHB;                                            // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MyIcon;                                            // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NewBadge;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_Main;                                           // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EHorizontalAlignment                          BoxAlignment;                                      // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x3];                                      // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           RegularColor;                                      // 0x02B4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FLinearColor                           SelectedColor;                                     // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HoveredColor;                                      // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DisabledColor;                                     // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SelectedHoveredColor;                              // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHovered;                                          // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSelected;                                         // 0x0319(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsToggle;                                         // 0x031A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B[0x5];                                      // 0x031B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnHover;                                           // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   Display_Text;                                      // 0x0330(0x0018)(Edit, BlueprintVisible)
	int32                                         Text_Size;                                         // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                Text_Padding_Amount;                               // 0x034C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                Button_Padding;                                    // 0x035C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Text_Normal;                                       // 0x036C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Text_Toggle_Normal;                                // 0x037C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Text_Selected;                                     // 0x038C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Text_Hovered;                                      // 0x039C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Text_Disabled;                                     // 0x03AC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Text_Selected_Hovered;                             // 0x03BC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Line_Color;                                        // 0x03CC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Line_Hover_Color;                                  // 0x03DC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Line_Unhover_Color;                                // 0x03EC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnDoubleClicked;                                   // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         Last_Click_Time;                                   // 0x0410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNewContent;                                       // 0x0414(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          bDisabled;                                         // 0x0415(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          bShowCornerIcon;                                   // 0x0416(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Use_Icon;                                          // 0x0417(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                TextPadding;                                       // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TSoftObjectPtr<class UTexture2D>              LeftIcon;                                          // 0x0428(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FVector2D                              LeftImageSize;                                     // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                ImagePadding;                                      // 0x0458(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              IconTranslation;                                   // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           IconColor;                                         // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           IconSelectedColor;                                 // 0x0480(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Line_Selected_Color;                               // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           IconHoverColor;                                    // 0x04A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       IconTransform;                                     // 0x04B0(0x001C)(Edit, BlueprintVisible, NoDestructor, ExposeOnSpawn)
	struct FMargin                                BorderMargin;                                      // 0x04CC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CornerImage;                                       // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture*                               BorderImage;                                       // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   In_Font_Info_Typeface;                             // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bIsTab;                                            // 0x04F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bUseBorder;                                        // 0x04F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FA[0x2];                                      // 0x04FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Line_Selected_HoveredColor;                        // 0x04FC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Line_Disabled_Color;                               // 0x050C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnClicked__DelegateSignature(bool bSelected_0, class UW_MainMenuButton_C* Button_0);
	void OnHover__DelegateSignature(bool bHovered_0);
	void OnDoubleClicked__DelegateSignature();
	void ExecuteUbergraph_W_MainMenuButton(int32 EntryPoint);
	void BndEvt__W_MainMenuButton_Button_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__W_MainMenuButton_Button_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void ForceClick();
	void Construct();
	void BndEvt__Button_K2Node_ComponentBoundEvent_17_OnButtonClickedEvent__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void SetSelected(bool bSelected_0);
	void UpdateColors();
	void SetText(const class FText& Text);
	struct FLinearColor Bind_LineColor();
	struct FSlateColor Bind_TextColor();
	void Update_Button();
	void Setup_Button();
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void UpdateNewContentDisplay(bool bNewContent_0);
	void ChangeIconRotation(float Angle);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_MainMenuButton_C">();
	}
	static class UW_MainMenuButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_MainMenuButton_C>();
	}
};
static_assert(alignof(UW_MainMenuButton_C) == 0x000008, "Wrong alignment on UW_MainMenuButton_C");
static_assert(sizeof(UW_MainMenuButton_C) == 0x000520, "Wrong size on UW_MainMenuButton_C");
static_assert(offsetof(UW_MainMenuButton_C, UberGraphFrame) == 0x000260, "Member 'UW_MainMenuButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, Press) == 0x000268, "Member 'UW_MainMenuButton_C::Press' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, Button) == 0x000270, "Member 'UW_MainMenuButton_C::Button' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, CornerIcon) == 0x000278, "Member 'UW_MainMenuButton_C::CornerIcon' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, IconScaleBox) == 0x000280, "Member 'UW_MainMenuButton_C::IconScaleBox' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, MainBorder) == 0x000288, "Member 'UW_MainMenuButton_C::MainBorder' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, MainHB) == 0x000290, "Member 'UW_MainMenuButton_C::MainHB' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, MyIcon) == 0x000298, "Member 'UW_MainMenuButton_C::MyIcon' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, NewBadge) == 0x0002A0, "Member 'UW_MainMenuButton_C::NewBadge' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, TB_Main) == 0x0002A8, "Member 'UW_MainMenuButton_C::TB_Main' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, BoxAlignment) == 0x0002B0, "Member 'UW_MainMenuButton_C::BoxAlignment' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, RegularColor) == 0x0002B4, "Member 'UW_MainMenuButton_C::RegularColor' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, OnClicked) == 0x0002C8, "Member 'UW_MainMenuButton_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, SelectedColor) == 0x0002D8, "Member 'UW_MainMenuButton_C::SelectedColor' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, HoveredColor) == 0x0002E8, "Member 'UW_MainMenuButton_C::HoveredColor' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, DisabledColor) == 0x0002F8, "Member 'UW_MainMenuButton_C::DisabledColor' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, SelectedHoveredColor) == 0x000308, "Member 'UW_MainMenuButton_C::SelectedHoveredColor' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, bHovered) == 0x000318, "Member 'UW_MainMenuButton_C::bHovered' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, bSelected) == 0x000319, "Member 'UW_MainMenuButton_C::bSelected' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, bIsToggle) == 0x00031A, "Member 'UW_MainMenuButton_C::bIsToggle' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, OnHover) == 0x000320, "Member 'UW_MainMenuButton_C::OnHover' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, Display_Text) == 0x000330, "Member 'UW_MainMenuButton_C::Display_Text' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, Text_Size) == 0x000348, "Member 'UW_MainMenuButton_C::Text_Size' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, Text_Padding_Amount) == 0x00034C, "Member 'UW_MainMenuButton_C::Text_Padding_Amount' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, Button_Padding) == 0x00035C, "Member 'UW_MainMenuButton_C::Button_Padding' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, Text_Normal) == 0x00036C, "Member 'UW_MainMenuButton_C::Text_Normal' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, Text_Toggle_Normal) == 0x00037C, "Member 'UW_MainMenuButton_C::Text_Toggle_Normal' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, Text_Selected) == 0x00038C, "Member 'UW_MainMenuButton_C::Text_Selected' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, Text_Hovered) == 0x00039C, "Member 'UW_MainMenuButton_C::Text_Hovered' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, Text_Disabled) == 0x0003AC, "Member 'UW_MainMenuButton_C::Text_Disabled' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, Text_Selected_Hovered) == 0x0003BC, "Member 'UW_MainMenuButton_C::Text_Selected_Hovered' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, Line_Color) == 0x0003CC, "Member 'UW_MainMenuButton_C::Line_Color' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, Line_Hover_Color) == 0x0003DC, "Member 'UW_MainMenuButton_C::Line_Hover_Color' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, Line_Unhover_Color) == 0x0003EC, "Member 'UW_MainMenuButton_C::Line_Unhover_Color' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, OnDoubleClicked) == 0x000400, "Member 'UW_MainMenuButton_C::OnDoubleClicked' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, Last_Click_Time) == 0x000410, "Member 'UW_MainMenuButton_C::Last_Click_Time' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, bNewContent) == 0x000414, "Member 'UW_MainMenuButton_C::bNewContent' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, bDisabled) == 0x000415, "Member 'UW_MainMenuButton_C::bDisabled' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, bShowCornerIcon) == 0x000416, "Member 'UW_MainMenuButton_C::bShowCornerIcon' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, Use_Icon) == 0x000417, "Member 'UW_MainMenuButton_C::Use_Icon' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, TextPadding) == 0x000418, "Member 'UW_MainMenuButton_C::TextPadding' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, LeftIcon) == 0x000428, "Member 'UW_MainMenuButton_C::LeftIcon' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, LeftImageSize) == 0x000450, "Member 'UW_MainMenuButton_C::LeftImageSize' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, ImagePadding) == 0x000458, "Member 'UW_MainMenuButton_C::ImagePadding' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, IconTranslation) == 0x000468, "Member 'UW_MainMenuButton_C::IconTranslation' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, IconColor) == 0x000470, "Member 'UW_MainMenuButton_C::IconColor' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, IconSelectedColor) == 0x000480, "Member 'UW_MainMenuButton_C::IconSelectedColor' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, Line_Selected_Color) == 0x000490, "Member 'UW_MainMenuButton_C::Line_Selected_Color' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, IconHoverColor) == 0x0004A0, "Member 'UW_MainMenuButton_C::IconHoverColor' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, IconTransform) == 0x0004B0, "Member 'UW_MainMenuButton_C::IconTransform' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, BorderMargin) == 0x0004CC, "Member 'UW_MainMenuButton_C::BorderMargin' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, CornerImage) == 0x0004E0, "Member 'UW_MainMenuButton_C::CornerImage' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, BorderImage) == 0x0004E8, "Member 'UW_MainMenuButton_C::BorderImage' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, In_Font_Info_Typeface) == 0x0004F0, "Member 'UW_MainMenuButton_C::In_Font_Info_Typeface' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, bIsTab) == 0x0004F8, "Member 'UW_MainMenuButton_C::bIsTab' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, bUseBorder) == 0x0004F9, "Member 'UW_MainMenuButton_C::bUseBorder' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, Line_Selected_HoveredColor) == 0x0004FC, "Member 'UW_MainMenuButton_C::Line_Selected_HoveredColor' has a wrong offset!");
static_assert(offsetof(UW_MainMenuButton_C, Line_Disabled_Color) == 0x00050C, "Member 'UW_MainMenuButton_C::Line_Disabled_Color' has a wrong offset!");

}

