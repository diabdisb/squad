#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TicketDetailRecord

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_TicketDetailRecord.W_TicketDetailRecord_C
// 0x00B8 (0x0318 - 0x0260)
class UW_TicketDetailRecord_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             BPCategoryText;                                    // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_82;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_TicketDetailProgress_C*              SumDetails;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                TicketsBorder;                                     // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_TicketDetailProgress_C*              UnitScoreDetails;                                  // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_TicketDetailProgress_C*              UnitsDetails;                                      // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   RecordName;                                        // 0x0298(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FLinearColor                           ProgressColor;                                     // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          PresentTickets;                                    // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_Tooltip_C*                         TooltipWidgetRef;                                  // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   UnitsTooltip;                                      // 0x02D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   UnitTicketsTooltip;                                // 0x02E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   SumTicketsTooltip;                                 // 0x0300(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_W_TicketDetailRecord(int32 EntryPoint);
	void Construct();
	void FillScoreValues(int32& Units, int32& UnitsTickets, bool Absolute);
	void GetValues(int32* Units, int32* UnitTickets, int32* Score);
	void UpdateProgressBar(int32& Score);
	class UWidget* UnitTooltip();
	class UWidget* UnitTicketTooltip();
	class UWidget* SumTicketTooltip();
	void SetUnitTooltip(const class FText& NewTooltip);
	void SetUnitTicketTooltip(const class FText& NewTooltip);
	void SetSumTicketTooltip(const class FText& NewTooltip);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_TicketDetailRecord_C">();
	}
	static class UW_TicketDetailRecord_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_TicketDetailRecord_C>();
	}
};
static_assert(alignof(UW_TicketDetailRecord_C) == 0x000008, "Wrong alignment on UW_TicketDetailRecord_C");
static_assert(sizeof(UW_TicketDetailRecord_C) == 0x000318, "Wrong size on UW_TicketDetailRecord_C");
static_assert(offsetof(UW_TicketDetailRecord_C, UberGraphFrame) == 0x000260, "Member 'UW_TicketDetailRecord_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailRecord_C, BPCategoryText) == 0x000268, "Member 'UW_TicketDetailRecord_C::BPCategoryText' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailRecord_C, Image_82) == 0x000270, "Member 'UW_TicketDetailRecord_C::Image_82' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailRecord_C, SumDetails) == 0x000278, "Member 'UW_TicketDetailRecord_C::SumDetails' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailRecord_C, TicketsBorder) == 0x000280, "Member 'UW_TicketDetailRecord_C::TicketsBorder' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailRecord_C, UnitScoreDetails) == 0x000288, "Member 'UW_TicketDetailRecord_C::UnitScoreDetails' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailRecord_C, UnitsDetails) == 0x000290, "Member 'UW_TicketDetailRecord_C::UnitsDetails' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailRecord_C, RecordName) == 0x000298, "Member 'UW_TicketDetailRecord_C::RecordName' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailRecord_C, ProgressColor) == 0x0002B0, "Member 'UW_TicketDetailRecord_C::ProgressColor' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailRecord_C, PresentTickets) == 0x0002C0, "Member 'UW_TicketDetailRecord_C::PresentTickets' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailRecord_C, TooltipWidgetRef) == 0x0002C8, "Member 'UW_TicketDetailRecord_C::TooltipWidgetRef' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailRecord_C, UnitsTooltip) == 0x0002D0, "Member 'UW_TicketDetailRecord_C::UnitsTooltip' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailRecord_C, UnitTicketsTooltip) == 0x0002E8, "Member 'UW_TicketDetailRecord_C::UnitTicketsTooltip' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailRecord_C, SumTicketsTooltip) == 0x000300, "Member 'UW_TicketDetailRecord_C::SumTicketsTooltip' has a wrong offset!");

}

