#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TicketDetailsCategory_Vehicles

#include "Basic.hpp"

#include "SQVehicleEntry_structs.hpp"
#include "Squad_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_TicketDetailsCategory_Vehicles.W_TicketDetailsCategory_Vehicles_C.AddRow
// 0x0130 (0x0130 - 0x0000)
struct W_TicketDetailsCategory_Vehicles_C_AddRow final
{
public:
	struct FSQTicketsSummaryVehicleRecord         Record;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         AddIndex;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_TicketDetailRecord_C*                CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQVehicleEntry                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0028(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F8(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              K2Node_DynamicCast_AsGrid_Slot;                    // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_TicketDetailsCategory_Vehicles_C_AddRow) == 0x000008, "Wrong alignment on W_TicketDetailsCategory_Vehicles_C_AddRow");
static_assert(sizeof(W_TicketDetailsCategory_Vehicles_C_AddRow) == 0x000130, "Wrong size on W_TicketDetailsCategory_Vehicles_C_AddRow");
static_assert(offsetof(W_TicketDetailsCategory_Vehicles_C_AddRow, Record) == 0x000000, "Member 'W_TicketDetailsCategory_Vehicles_C_AddRow::Record' has a wrong offset!");
static_assert(offsetof(W_TicketDetailsCategory_Vehicles_C_AddRow, AddIndex) == 0x000018, "Member 'W_TicketDetailsCategory_Vehicles_C_AddRow::AddIndex' has a wrong offset!");
static_assert(offsetof(W_TicketDetailsCategory_Vehicles_C_AddRow, CallFunc_Multiply_IntInt_ReturnValue) == 0x00001C, "Member 'W_TicketDetailsCategory_Vehicles_C_AddRow::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TicketDetailsCategory_Vehicles_C_AddRow, CallFunc_Create_ReturnValue) == 0x000020, "Member 'W_TicketDetailsCategory_Vehicles_C_AddRow::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TicketDetailsCategory_Vehicles_C_AddRow, CallFunc_GetDataTableRowFromName_OutRow) == 0x000028, "Member 'W_TicketDetailsCategory_Vehicles_C_AddRow::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_TicketDetailsCategory_Vehicles_C_AddRow, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000098, "Member 'W_TicketDetailsCategory_Vehicles_C_AddRow::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TicketDetailsCategory_Vehicles_C_AddRow, K2Node_MakeStruct_FormatArgumentData) == 0x0000A0, "Member 'W_TicketDetailsCategory_Vehicles_C_AddRow::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_TicketDetailsCategory_Vehicles_C_AddRow, K2Node_MakeArray_Array) == 0x0000E0, "Member 'W_TicketDetailsCategory_Vehicles_C_AddRow::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_TicketDetailsCategory_Vehicles_C_AddRow, CallFunc_GetChildrenCount_ReturnValue) == 0x0000F0, "Member 'W_TicketDetailsCategory_Vehicles_C_AddRow::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TicketDetailsCategory_Vehicles_C_AddRow, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'W_TicketDetailsCategory_Vehicles_C_AddRow::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TicketDetailsCategory_Vehicles_C_AddRow, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'W_TicketDetailsCategory_Vehicles_C_AddRow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TicketDetailsCategory_Vehicles_C_AddRow, CallFunc_AddChild_ReturnValue) == 0x000118, "Member 'W_TicketDetailsCategory_Vehicles_C_AddRow::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TicketDetailsCategory_Vehicles_C_AddRow, K2Node_DynamicCast_AsGrid_Slot) == 0x000120, "Member 'W_TicketDetailsCategory_Vehicles_C_AddRow::K2Node_DynamicCast_AsGrid_Slot' has a wrong offset!");
static_assert(offsetof(W_TicketDetailsCategory_Vehicles_C_AddRow, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'W_TicketDetailsCategory_Vehicles_C_AddRow::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_TicketDetailsCategory_Vehicles.W_TicketDetailsCategory_Vehicles_C.FillEmptyRecords
// 0x0008 (0x0008 - 0x0000)
struct W_TicketDetailsCategory_Vehicles_C_FillEmptyRecords final
{
public:
	class UUMG_Tooltip_C*                         Tooltip;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TicketDetailsCategory_Vehicles_C_FillEmptyRecords) == 0x000008, "Wrong alignment on W_TicketDetailsCategory_Vehicles_C_FillEmptyRecords");
static_assert(sizeof(W_TicketDetailsCategory_Vehicles_C_FillEmptyRecords) == 0x000008, "Wrong size on W_TicketDetailsCategory_Vehicles_C_FillEmptyRecords");
static_assert(offsetof(W_TicketDetailsCategory_Vehicles_C_FillEmptyRecords, Tooltip) == 0x000000, "Member 'W_TicketDetailsCategory_Vehicles_C_FillEmptyRecords::Tooltip' has a wrong offset!");

}

