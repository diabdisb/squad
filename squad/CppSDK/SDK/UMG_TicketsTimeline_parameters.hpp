#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_TicketsTimeline

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ESQVehicle_structs.hpp"
#include "SQVehicleEntry_structs.hpp"
#include "Squad_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "SQFactionEntry_structs.hpp"


namespace SDK::Params
{

// Function UMG_TicketsTimeline.UMG_TicketsTimeline_C.ExecuteUbergraph_UMG_TicketsTimeline
// 0x0038 (0x0038 - 0x0000)
struct UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeam_ReturnValue;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTimelineDataReady_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline) == 0x000008, "Wrong alignment on UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline");
static_assert(sizeof(UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline) == 0x000038, "Wrong size on UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline");
static_assert(offsetof(UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline, EntryPoint) == 0x000000, "Member 'UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000020, "Member 'UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline, CallFunc_GetTeam_ReturnValue) == 0x00002C, "Member 'UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline, CallFunc_IsTimelineDataReady_ReturnValue) == 0x000030, "Member 'UMG_TicketsTimeline_C_ExecuteUbergraph_UMG_TicketsTimeline::CallFunc_IsTimelineDataReady_ReturnValue' has a wrong offset!");

// Function UMG_TicketsTimeline.UMG_TicketsTimeline_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UMG_TicketsTimeline_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_TicketsTimeline_C_PreConstruct) == 0x000001, "Wrong alignment on UMG_TicketsTimeline_C_PreConstruct");
static_assert(sizeof(UMG_TicketsTimeline_C_PreConstruct) == 0x000001, "Wrong size on UMG_TicketsTimeline_C_PreConstruct");
static_assert(offsetof(UMG_TicketsTimeline_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UMG_TicketsTimeline_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UMG_TicketsTimeline.UMG_TicketsTimeline_C.PrepareData
// 0x0158 (0x0158 - 0x0000)
struct UMG_TicketsTimeline_C_PrepareData final
{
public:
	TArray<struct FVector2D>                      Team2Timeline;                                     // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector2D>                      Team1Timeline;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetOppositeTeam_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetOppositeTeam_ReturnValue_1;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSQTicketChangeLinked>          CallFunc_GetTeamTimelineData_ReturnValue;          // 0x0050(0x0010)(ConstParm, ReferenceParm)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQTicketChangeLinked                  CallFunc_Array_Get_Item;                           // 0x0064(0x0018)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ToGraphPosition_Pos;                      // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSQTicketChangeLinked>          CallFunc_GetTeamTimelineData_ReturnValue_1;        // 0x0090(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQTicketChangeLinked                  CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0018)(NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector2D                              CallFunc_ToGraphPosition_Pos_1;                    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTimelineDataReady_ReturnValue;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_2;             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQTicketChange                        CallFunc_Array_Get_Item_2;                         // 0x0110(0x0014)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0144(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_TicketsTimeline_C_PrepareData) == 0x000008, "Wrong alignment on UMG_TicketsTimeline_C_PrepareData");
static_assert(sizeof(UMG_TicketsTimeline_C_PrepareData) == 0x000158, "Wrong size on UMG_TicketsTimeline_C_PrepareData");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, Team2Timeline) == 0x000000, "Member 'UMG_TicketsTimeline_C_PrepareData::Team2Timeline' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, Team1Timeline) == 0x000010, "Member 'UMG_TicketsTimeline_C_PrepareData::Team1Timeline' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'UMG_TicketsTimeline_C_PrepareData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, Temp_int_Array_Index_Variable) == 0x000028, "Member 'UMG_TicketsTimeline_C_PrepareData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'UMG_TicketsTimeline_C_PrepareData::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'UMG_TicketsTimeline_C_PrepareData::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000038, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_GetOppositeTeam_ReturnValue) == 0x00003C, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_GetOppositeTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Array_Add_ReturnValue_1) == 0x000044, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_GetOppositeTeam_ReturnValue_1) == 0x000048, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_GetOppositeTeam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Conv_IntToByte_ReturnValue) == 0x00004C, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_GetTeamTimelineData_ReturnValue) == 0x000050, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_GetTeamTimelineData_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000060, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Array_Get_Item) == 0x000064, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_ToGraphPosition_Pos) == 0x000084, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_ToGraphPosition_Pos' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_GetTeamTimelineData_ReturnValue_1) == 0x000090, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_GetTeamTimelineData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, Temp_int_Array_Index_Variable_2) == 0x0000A4, "Member 'UMG_TicketsTimeline_C_PrepareData::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, K2Node_CreateDelegate_OutputDelegate) == 0x0000C0, "Member 'UMG_TicketsTimeline_C_PrepareData::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_ToGraphPosition_Pos_1) == 0x0000D0, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_ToGraphPosition_Pos_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000D8, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_IsTimelineDataReady_ReturnValue) == 0x0000E0, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_IsTimelineDataReady_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, Temp_int_Loop_Counter_Variable_2) == 0x0000E4, "Member 'UMG_TicketsTimeline_C_PrepareData::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E8, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000EC, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000F0, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x0000F4, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Array_Add_ReturnValue_2) == 0x0000F8, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Array_Add_ReturnValue_3) == 0x0000FC, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000100, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000104, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Conv_IntToByte_ReturnValue_2) == 0x000108, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Conv_IntToByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Array_Length_ReturnValue_2) == 0x00010C, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Array_Get_Item_2) == 0x000110, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Less_IntInt_ReturnValue_2) == 0x000124, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Array_Add_ReturnValue_4) == 0x000128, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x00012C, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Array_Add_ReturnValue_5) == 0x000130, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_MakeVector2D_ReturnValue) == 0x000134, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x00013C, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Array_Add_ReturnValue_6) == 0x000140, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_MakeVector2D_ReturnValue_1) == 0x000144, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Array_Add_ReturnValue_7) == 0x00014C, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_Max_ReturnValue) == 0x000150, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_PrepareData, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000154, "Member 'UMG_TicketsTimeline_C_PrepareData::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function UMG_TicketsTimeline.UMG_TicketsTimeline_C.UpdateTeamNames
// 0x05F8 (0x05F8 - 0x0000)
struct UMG_TicketsTimeline_C_UpdateTeamNames final
{
public:
	bool                                          TeamsUpdated;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQGameState*                           K2Node_DynamicCast_AsSQGame_State;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQTeamState*                           CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTickets_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQFactionSetup_C*                   K2Node_DynamicCast_AsBP_SQFaction_Setup;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetFactionEntry_Success;               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQFactionEntry                        CallFunc_TryGetFactionEntry_FactionEntry;          // 0x0070(0x0580)(HasGetValueTypeHash)
	class UTextBlock*                             K2Node_Select_Default;                             // 0x05F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_TicketsTimeline_C_UpdateTeamNames) == 0x000008, "Wrong alignment on UMG_TicketsTimeline_C_UpdateTeamNames");
static_assert(sizeof(UMG_TicketsTimeline_C_UpdateTeamNames) == 0x0005F8, "Wrong size on UMG_TicketsTimeline_C_UpdateTeamNames");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, TeamsUpdated) == 0x000000, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::TeamsUpdated' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, Temp_int_Array_Index_Variable) == 0x000004, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, Temp_bool_Variable) == 0x000010, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000011, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, CallFunc_GetGameState_ReturnValue) == 0x000030, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, K2Node_DynamicCast_AsSQGame_State) == 0x000038, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::K2Node_DynamicCast_AsSQGame_State' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, CallFunc_Array_Get_Item) == 0x000048, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, CallFunc_GetTickets_ReturnValue) == 0x000054, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::CallFunc_GetTickets_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000058, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, K2Node_DynamicCast_AsBP_SQFaction_Setup) == 0x000060, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::K2Node_DynamicCast_AsBP_SQFaction_Setup' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, CallFunc_TryGetFactionEntry_Success) == 0x000069, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::CallFunc_TryGetFactionEntry_Success' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, CallFunc_TryGetFactionEntry_FactionEntry) == 0x000070, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::CallFunc_TryGetFactionEntry_FactionEntry' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTeamNames, K2Node_Select_Default) == 0x0005F0, "Member 'UMG_TicketsTimeline_C_UpdateTeamNames::K2Node_Select_Default' has a wrong offset!");

// Function UMG_TicketsTimeline.UMG_TicketsTimeline_C.CreateTicketsLines
// 0x0050 (0x0050 - 0x0000)
struct UMG_TicketsTimeline_C_CreateTicketsLines final
{
public:
	int32                                         AdditionalLineOffetPerLine;                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TicketsStep;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumLines;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDesiredTicketLinesNum_Num;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0018(0x0008)(NoDestructor)
	class UUMG_TimelineHorizontalLine_C*          CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDesiredTicketLinesNum_Num_1;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_2;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_TicketsTimeline_C_CreateTicketsLines) == 0x000008, "Wrong alignment on UMG_TicketsTimeline_C_CreateTicketsLines");
static_assert(sizeof(UMG_TicketsTimeline_C_CreateTicketsLines) == 0x000050, "Wrong size on UMG_TicketsTimeline_C_CreateTicketsLines");
static_assert(offsetof(UMG_TicketsTimeline_C_CreateTicketsLines, AdditionalLineOffetPerLine) == 0x000000, "Member 'UMG_TicketsTimeline_C_CreateTicketsLines::AdditionalLineOffetPerLine' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_CreateTicketsLines, TicketsStep) == 0x000004, "Member 'UMG_TicketsTimeline_C_CreateTicketsLines::TicketsStep' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_CreateTicketsLines, NumLines) == 0x000008, "Member 'UMG_TicketsTimeline_C_CreateTicketsLines::NumLines' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_CreateTicketsLines, Temp_int_Variable) == 0x00000C, "Member 'UMG_TicketsTimeline_C_CreateTicketsLines::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_CreateTicketsLines, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'UMG_TicketsTimeline_C_CreateTicketsLines::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_CreateTicketsLines, CallFunc_GetDesiredTicketLinesNum_Num) == 0x000014, "Member 'UMG_TicketsTimeline_C_CreateTicketsLines::CallFunc_GetDesiredTicketLinesNum_Num' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_CreateTicketsLines, K2Node_MakeStruct_SlateChildSize) == 0x000018, "Member 'UMG_TicketsTimeline_C_CreateTicketsLines::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_CreateTicketsLines, CallFunc_Create_ReturnValue) == 0x000020, "Member 'UMG_TicketsTimeline_C_CreateTicketsLines::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_CreateTicketsLines, CallFunc_Multiply_IntInt_ReturnValue) == 0x000028, "Member 'UMG_TicketsTimeline_C_CreateTicketsLines::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_CreateTicketsLines, CallFunc_GetDesiredTicketLinesNum_Num_1) == 0x00002C, "Member 'UMG_TicketsTimeline_C_CreateTicketsLines::CallFunc_GetDesiredTicketLinesNum_Num_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_CreateTicketsLines, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000030, "Member 'UMG_TicketsTimeline_C_CreateTicketsLines::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_CreateTicketsLines, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'UMG_TicketsTimeline_C_CreateTicketsLines::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_CreateTicketsLines, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00003C, "Member 'UMG_TicketsTimeline_C_CreateTicketsLines::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_CreateTicketsLines, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000040, "Member 'UMG_TicketsTimeline_C_CreateTicketsLines::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_CreateTicketsLines, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'UMG_TicketsTimeline_C_CreateTicketsLines::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_CreateTicketsLines, CallFunc_Multiply_IntInt_ReturnValue_2) == 0x000048, "Member 'UMG_TicketsTimeline_C_CreateTicketsLines::CallFunc_Multiply_IntInt_ReturnValue_2' has a wrong offset!");

// Function UMG_TicketsTimeline.UMG_TicketsTimeline_C.UpdateTimeLines
// 0x0078 (0x0078 - 0x0000)
struct UMG_TicketsTimeline_C_UpdateTimeLines final
{
public:
	int32                                         NumTimes;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Minutes;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_2;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_3;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0034(0x0008)(NoDestructor)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_TimelineTime_C*                    CallFunc_Create_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize_1;                // 0x0054(0x0008)(NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_TimelineTime_C*                    CallFunc_Create_ReturnValue_1;                     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue_1;    // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_TicketsTimeline_C_UpdateTimeLines) == 0x000008, "Wrong alignment on UMG_TicketsTimeline_C_UpdateTimeLines");
static_assert(sizeof(UMG_TicketsTimeline_C_UpdateTimeLines) == 0x000078, "Wrong size on UMG_TicketsTimeline_C_UpdateTimeLines");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, NumTimes) == 0x000000, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::NumTimes' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, Minutes) == 0x000004, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::Minutes' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, Temp_int_Variable) == 0x000008, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, CallFunc_Multiply_IntInt_ReturnValue) == 0x000010, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000018, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, CallFunc_Multiply_IntInt_ReturnValue_2) == 0x00001C, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::CallFunc_Multiply_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, CallFunc_Multiply_IntInt_ReturnValue_3) == 0x000020, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::CallFunc_Multiply_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00002C, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, K2Node_MakeStruct_SlateChildSize) == 0x000034, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, CallFunc_Divide_IntInt_ReturnValue) == 0x00003C, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, CallFunc_Create_ReturnValue) == 0x000040, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, CallFunc_Divide_IntInt_ReturnValue_1) == 0x00004C, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, CallFunc_Less_IntInt_ReturnValue_1) == 0x000050, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, K2Node_MakeStruct_SlateChildSize_1) == 0x000054, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::K2Node_MakeStruct_SlateChildSize_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, CallFunc_Create_ReturnValue_1) == 0x000060, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000068, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_UpdateTimeLines, CallFunc_AddChildToHorizontalBox_ReturnValue_1) == 0x000070, "Member 'UMG_TicketsTimeline_C_UpdateTimeLines::CallFunc_AddChildToHorizontalBox_ReturnValue_1' has a wrong offset!");

// Function UMG_TicketsTimeline.UMG_TicketsTimeline_C.ToGraphPosition
// 0x0028 (0x0028 - 0x0000)
struct UMG_TicketsTimeline_C_ToGraphPosition final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Tickets;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Pos;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_TicketsTimeline_C_ToGraphPosition) == 0x000004, "Wrong alignment on UMG_TicketsTimeline_C_ToGraphPosition");
static_assert(sizeof(UMG_TicketsTimeline_C_ToGraphPosition) == 0x000028, "Wrong size on UMG_TicketsTimeline_C_ToGraphPosition");
static_assert(offsetof(UMG_TicketsTimeline_C_ToGraphPosition, Time) == 0x000000, "Member 'UMG_TicketsTimeline_C_ToGraphPosition::Time' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_ToGraphPosition, Tickets) == 0x000004, "Member 'UMG_TicketsTimeline_C_ToGraphPosition::Tickets' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_ToGraphPosition, Pos) == 0x000008, "Member 'UMG_TicketsTimeline_C_ToGraphPosition::Pos' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_ToGraphPosition, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'UMG_TicketsTimeline_C_ToGraphPosition::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_ToGraphPosition, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'UMG_TicketsTimeline_C_ToGraphPosition::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_ToGraphPosition, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000018, "Member 'UMG_TicketsTimeline_C_ToGraphPosition::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_ToGraphPosition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'UMG_TicketsTimeline_C_ToGraphPosition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_ToGraphPosition, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'UMG_TicketsTimeline_C_ToGraphPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function UMG_TicketsTimeline.UMG_TicketsTimeline_C.AddEventIcon
// 0x0068 (0x0068 - 0x0000)
struct UMG_TicketsTimeline_C_AddEventIcon final
{
public:
	struct FSQTicketChangeLinked                  TicketChange;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FVector2D                              GraphPos;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamIndex;                                         // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EventIndex;                                        // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQTicketChangeReason                         Reason;                                            // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_TicketChangeIcon_C*                CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQTimelineElement                     K2Node_MakeStruct_SQTimelineElement;               // 0x0038(0x0010)(NoDestructor, ContainsInstancedReference)
	class UUMG_TimelinePoint_C*                   CallFunc_Create_ReturnValue_1;                     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQTimelinePointElement                K2Node_MakeStruct_SQTimelinePointElement;          // 0x0050(0x0018)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(UMG_TicketsTimeline_C_AddEventIcon) == 0x000008, "Wrong alignment on UMG_TicketsTimeline_C_AddEventIcon");
static_assert(sizeof(UMG_TicketsTimeline_C_AddEventIcon) == 0x000068, "Wrong size on UMG_TicketsTimeline_C_AddEventIcon");
static_assert(offsetof(UMG_TicketsTimeline_C_AddEventIcon, TicketChange) == 0x000000, "Member 'UMG_TicketsTimeline_C_AddEventIcon::TicketChange' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddEventIcon, GraphPos) == 0x000018, "Member 'UMG_TicketsTimeline_C_AddEventIcon::GraphPos' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddEventIcon, TeamIndex) == 0x000020, "Member 'UMG_TicketsTimeline_C_AddEventIcon::TeamIndex' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddEventIcon, EventIndex) == 0x000024, "Member 'UMG_TicketsTimeline_C_AddEventIcon::EventIndex' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddEventIcon, Reason) == 0x000028, "Member 'UMG_TicketsTimeline_C_AddEventIcon::Reason' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddEventIcon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'UMG_TicketsTimeline_C_AddEventIcon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddEventIcon, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00002A, "Member 'UMG_TicketsTimeline_C_AddEventIcon::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddEventIcon, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00002B, "Member 'UMG_TicketsTimeline_C_AddEventIcon::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddEventIcon, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00002C, "Member 'UMG_TicketsTimeline_C_AddEventIcon::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddEventIcon, CallFunc_BooleanOR_ReturnValue) == 0x00002D, "Member 'UMG_TicketsTimeline_C_AddEventIcon::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddEventIcon, CallFunc_BooleanOR_ReturnValue_1) == 0x00002E, "Member 'UMG_TicketsTimeline_C_AddEventIcon::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddEventIcon, CallFunc_Create_ReturnValue) == 0x000030, "Member 'UMG_TicketsTimeline_C_AddEventIcon::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddEventIcon, K2Node_MakeStruct_SQTimelineElement) == 0x000038, "Member 'UMG_TicketsTimeline_C_AddEventIcon::K2Node_MakeStruct_SQTimelineElement' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddEventIcon, CallFunc_Create_ReturnValue_1) == 0x000048, "Member 'UMG_TicketsTimeline_C_AddEventIcon::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddEventIcon, K2Node_MakeStruct_SQTimelinePointElement) == 0x000050, "Member 'UMG_TicketsTimeline_C_AddEventIcon::K2Node_MakeStruct_SQTimelinePointElement' has a wrong offset!");

// Function UMG_TicketsTimeline.UMG_TicketsTimeline_C.AddVehicleIcons
// 0x0138 (0x0138 - 0x0000)
struct UMG_TicketsTimeline_C_AddVehicleIcons final
{
public:
	TArray<ESQVehicle>                            TracedVehicleTypes;                                // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ESQVehicle>                            K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
	class UUMG_TicketChangeIcon_C*                CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_TimelinePoint_C*                   CallFunc_Create_ReturnValue_1;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQVehicleDestroy                      CallFunc_Array_Get_Item;                           // 0x0048(0x0018)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ConvertTimelineIndexToTeam_ReturnValue;   // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ToGraphPosition_Pos;                      // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQTimelinePointElement                K2Node_MakeStruct_SQTimelinePointElement;          // 0x0080(0x0018)(NoDestructor, ContainsInstancedReference)
	struct FSQTimelineElement                     K2Node_MakeStruct_SQTimelineElement;               // 0x0098(0x0010)(NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SQVehicleSettings_C*                K2Node_DynamicCast_AsBP_SQVehicle_Settings;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQVehicleEntry                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x00C0(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_TicketsTimeline_C_AddVehicleIcons) == 0x000008, "Wrong alignment on UMG_TicketsTimeline_C_AddVehicleIcons");
static_assert(sizeof(UMG_TicketsTimeline_C_AddVehicleIcons) == 0x000138, "Wrong size on UMG_TicketsTimeline_C_AddVehicleIcons");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, TracedVehicleTypes) == 0x000000, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::TracedVehicleTypes' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, Temp_int_Array_Index_Variable) == 0x000010, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, K2Node_MakeArray_Array) == 0x000020, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, CallFunc_Create_ReturnValue) == 0x000030, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, CallFunc_Create_ReturnValue_1) == 0x000038, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, CallFunc_MakeLiteralByte_ReturnValue) == 0x000040, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, CallFunc_Conv_IntToByte_ReturnValue) == 0x000041, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, CallFunc_Array_Get_Item) == 0x000048, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, CallFunc_ConvertTimelineIndexToTeam_ReturnValue) == 0x000064, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::CallFunc_ConvertTimelineIndexToTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, CallFunc_BreakVector2D_X) == 0x00006C, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, CallFunc_BreakVector2D_Y) == 0x000070, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, CallFunc_ToGraphPosition_Pos) == 0x000074, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::CallFunc_ToGraphPosition_Pos' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, CallFunc_FTrunc_ReturnValue) == 0x00007C, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, K2Node_MakeStruct_SQTimelinePointElement) == 0x000080, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::K2Node_MakeStruct_SQTimelinePointElement' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, K2Node_MakeStruct_SQTimelineElement) == 0x000098, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::K2Node_MakeStruct_SQTimelineElement' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A8, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, CallFunc_SelectInt_ReturnValue) == 0x0000AC, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, K2Node_DynamicCast_AsBP_SQVehicle_Settings) == 0x0000B0, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::K2Node_DynamicCast_AsBP_SQVehicle_Settings' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, CallFunc_Array_Contains_ReturnValue) == 0x0000B9, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000C0, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_AddVehicleIcons, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000130, "Member 'UMG_TicketsTimeline_C_AddVehicleIcons::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function UMG_TicketsTimeline.UMG_TicketsTimeline_C.GetDesiredTicketLinesNum
// 0x0020 (0x0020 - 0x0000)
struct UMG_TicketsTimeline_C_GetDesiredTicketLinesNum final
{
public:
	int32                                         TicketsOffset;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TicketsStep;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Num;                                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_TicketsTimeline_C_GetDesiredTicketLinesNum) == 0x000004, "Wrong alignment on UMG_TicketsTimeline_C_GetDesiredTicketLinesNum");
static_assert(sizeof(UMG_TicketsTimeline_C_GetDesiredTicketLinesNum) == 0x000020, "Wrong size on UMG_TicketsTimeline_C_GetDesiredTicketLinesNum");
static_assert(offsetof(UMG_TicketsTimeline_C_GetDesiredTicketLinesNum, TicketsOffset) == 0x000000, "Member 'UMG_TicketsTimeline_C_GetDesiredTicketLinesNum::TicketsOffset' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_GetDesiredTicketLinesNum, TicketsStep) == 0x000004, "Member 'UMG_TicketsTimeline_C_GetDesiredTicketLinesNum::TicketsStep' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_GetDesiredTicketLinesNum, Num) == 0x000008, "Member 'UMG_TicketsTimeline_C_GetDesiredTicketLinesNum::Num' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_GetDesiredTicketLinesNum, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'UMG_TicketsTimeline_C_GetDesiredTicketLinesNum::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_GetDesiredTicketLinesNum, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'UMG_TicketsTimeline_C_GetDesiredTicketLinesNum::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_GetDesiredTicketLinesNum, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000014, "Member 'UMG_TicketsTimeline_C_GetDesiredTicketLinesNum::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_GetDesiredTicketLinesNum, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'UMG_TicketsTimeline_C_GetDesiredTicketLinesNum::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_TicketsTimeline_C_GetDesiredTicketLinesNum, CallFunc_FCeil_ReturnValue) == 0x00001C, "Member 'UMG_TicketsTimeline_C_GetDesiredTicketLinesNum::CallFunc_FCeil_ReturnValue' has a wrong offset!");

}

