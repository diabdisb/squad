#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TicketDetailsCategory

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Squad_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_TicketDetailsCategory.W_TicketDetailsCategory_C
// 0x0120 (0x0380 - 0x0260)
class UW_TicketDetailsCategory_C : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVerticalBox*                           AdditionalVB;                                      // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BackgroundBorder;                                  // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Backgrround;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BPCategoryText;                                    // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CollapseArrow;                                     // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                DetailsBorder;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_93;                                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                MainButton;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           MainVB;                                            // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             RecordsVB;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ScoreSB;                                           // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ScoreText;                                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Category;                                          // 0x02C8(0x0018)(Edit, BlueprintVisible)
	bool                                          EnabledCategory;                                   // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           DisableBorderColor;                                // 0x02E4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EnabledBorderColor;                                // 0x02F4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ESQTicketChangeReason>                 AcceptableRecords;                                 // 0x0308(0x0010)(Edit, BlueprintVisible)
	TArray<class FText>                           RecordsNames;                                      // 0x0318(0x0010)(Edit, BlueprintVisible)
	bool                                          ShowScore;                                         // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x3];                                      // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TicketProgressColor;                               // 0x032C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScoreValue;                                        // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AbsouleScore;                                      // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ContentVisible;                                    // 0x0341(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342[0x6];                                      // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_Tooltip_C*                         TooltipWidgetRef;                                  // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EnabledBacgroundColor;                             // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DisableBacgroundColor;                             // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TopPadding;                                        // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          ScoreAlignment;                                    // 0x0374(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_375[0x3];                                      // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScoreRightPadding;                                 // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_TicketDetailsCategory(int32 EntryPoint);
	void BndEvt__W_TicketDetailsCategory_MainButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_TicketDetailsCategory_MainButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__W_TicketDetailsCategory_MainButton_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void SetScore(int32 Score, bool Absolute);
	void UpdateStatus();
	void ToggleRecordsVisib();
	void FillEmptyRecords(class UUMG_Tooltip_C* Tooltip);
	void TryAddRecord(struct FSQTicketsSummaryRecord& Record, bool* Added);
	void GetMaxValues(int32* Units, int32* UnitTickets, int32* Score);
	void UpdateProgressBar(int32& MaxScore);
	void AddWidgetToSubcategory(class UUserWidget* NewWidget);
	void UpdateMainScore(int32* Score);
	void ChangeContentVisibility(bool NewVisibile, bool WithChildren);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_TicketDetailsCategory_C">();
	}
	static class UW_TicketDetailsCategory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_TicketDetailsCategory_C>();
	}
};
static_assert(alignof(UW_TicketDetailsCategory_C) == 0x000008, "Wrong alignment on UW_TicketDetailsCategory_C");
static_assert(sizeof(UW_TicketDetailsCategory_C) == 0x000380, "Wrong size on UW_TicketDetailsCategory_C");
static_assert(offsetof(UW_TicketDetailsCategory_C, UberGraphFrame) == 0x000260, "Member 'UW_TicketDetailsCategory_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, AdditionalVB) == 0x000268, "Member 'UW_TicketDetailsCategory_C::AdditionalVB' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, BackgroundBorder) == 0x000270, "Member 'UW_TicketDetailsCategory_C::BackgroundBorder' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, Backgrround) == 0x000278, "Member 'UW_TicketDetailsCategory_C::Backgrround' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, BPCategoryText) == 0x000280, "Member 'UW_TicketDetailsCategory_C::BPCategoryText' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, CollapseArrow) == 0x000288, "Member 'UW_TicketDetailsCategory_C::CollapseArrow' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, DetailsBorder) == 0x000290, "Member 'UW_TicketDetailsCategory_C::DetailsBorder' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, Image_93) == 0x000298, "Member 'UW_TicketDetailsCategory_C::Image_93' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, MainButton) == 0x0002A0, "Member 'UW_TicketDetailsCategory_C::MainButton' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, MainVB) == 0x0002A8, "Member 'UW_TicketDetailsCategory_C::MainVB' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, RecordsVB) == 0x0002B0, "Member 'UW_TicketDetailsCategory_C::RecordsVB' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, ScoreSB) == 0x0002B8, "Member 'UW_TicketDetailsCategory_C::ScoreSB' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, ScoreText) == 0x0002C0, "Member 'UW_TicketDetailsCategory_C::ScoreText' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, Category) == 0x0002C8, "Member 'UW_TicketDetailsCategory_C::Category' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, EnabledCategory) == 0x0002E0, "Member 'UW_TicketDetailsCategory_C::EnabledCategory' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, DisableBorderColor) == 0x0002E4, "Member 'UW_TicketDetailsCategory_C::DisableBorderColor' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, EnabledBorderColor) == 0x0002F4, "Member 'UW_TicketDetailsCategory_C::EnabledBorderColor' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, AcceptableRecords) == 0x000308, "Member 'UW_TicketDetailsCategory_C::AcceptableRecords' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, RecordsNames) == 0x000318, "Member 'UW_TicketDetailsCategory_C::RecordsNames' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, ShowScore) == 0x000328, "Member 'UW_TicketDetailsCategory_C::ShowScore' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, TicketProgressColor) == 0x00032C, "Member 'UW_TicketDetailsCategory_C::TicketProgressColor' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, ScoreValue) == 0x00033C, "Member 'UW_TicketDetailsCategory_C::ScoreValue' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, AbsouleScore) == 0x000340, "Member 'UW_TicketDetailsCategory_C::AbsouleScore' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, ContentVisible) == 0x000341, "Member 'UW_TicketDetailsCategory_C::ContentVisible' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, TooltipWidgetRef) == 0x000348, "Member 'UW_TicketDetailsCategory_C::TooltipWidgetRef' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, EnabledBacgroundColor) == 0x000350, "Member 'UW_TicketDetailsCategory_C::EnabledBacgroundColor' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, DisableBacgroundColor) == 0x000360, "Member 'UW_TicketDetailsCategory_C::DisableBacgroundColor' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, TopPadding) == 0x000370, "Member 'UW_TicketDetailsCategory_C::TopPadding' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, ScoreAlignment) == 0x000374, "Member 'UW_TicketDetailsCategory_C::ScoreAlignment' has a wrong offset!");
static_assert(offsetof(UW_TicketDetailsCategory_C, ScoreRightPadding) == 0x000378, "Member 'UW_TicketDetailsCategory_C::ScoreRightPadding' has a wrong offset!");

}

