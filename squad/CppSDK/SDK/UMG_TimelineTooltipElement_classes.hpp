#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_TimelineTooltipElement

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UMG_TimelineTooltipElement.UMG_TimelineTooltipElement_C
// 0x0050 (0x02B0 - 0x0260)
class UUMG_TimelineTooltipElement_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 ColorImage;                                        // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ElementIcon;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SBSpacer;                                          // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TicketsCostText;                                   // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ValueText;                                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           BaseColor;                                         // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          WithIcon;                                          // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PointIndex;                                        // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithSpacer;                                        // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_UMG_TimelineTooltipElement(int32 EntryPoint);
	void Construct();
	void Update(const class FText& NewText, int32 Tickets);
	void ChangeColor(const struct FLinearColor& NewColor);
	void ChangeTextValue(const class FText& InText);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UMG_TimelineTooltipElement_C">();
	}
	static class UUMG_TimelineTooltipElement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMG_TimelineTooltipElement_C>();
	}
};
static_assert(alignof(UUMG_TimelineTooltipElement_C) == 0x000008, "Wrong alignment on UUMG_TimelineTooltipElement_C");
static_assert(sizeof(UUMG_TimelineTooltipElement_C) == 0x0002B0, "Wrong size on UUMG_TimelineTooltipElement_C");
static_assert(offsetof(UUMG_TimelineTooltipElement_C, UberGraphFrame) == 0x000260, "Member 'UUMG_TimelineTooltipElement_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUMG_TimelineTooltipElement_C, ColorImage) == 0x000268, "Member 'UUMG_TimelineTooltipElement_C::ColorImage' has a wrong offset!");
static_assert(offsetof(UUMG_TimelineTooltipElement_C, ElementIcon) == 0x000270, "Member 'UUMG_TimelineTooltipElement_C::ElementIcon' has a wrong offset!");
static_assert(offsetof(UUMG_TimelineTooltipElement_C, SBSpacer) == 0x000278, "Member 'UUMG_TimelineTooltipElement_C::SBSpacer' has a wrong offset!");
static_assert(offsetof(UUMG_TimelineTooltipElement_C, TicketsCostText) == 0x000280, "Member 'UUMG_TimelineTooltipElement_C::TicketsCostText' has a wrong offset!");
static_assert(offsetof(UUMG_TimelineTooltipElement_C, ValueText) == 0x000288, "Member 'UUMG_TimelineTooltipElement_C::ValueText' has a wrong offset!");
static_assert(offsetof(UUMG_TimelineTooltipElement_C, BaseColor) == 0x000290, "Member 'UUMG_TimelineTooltipElement_C::BaseColor' has a wrong offset!");
static_assert(offsetof(UUMG_TimelineTooltipElement_C, WithIcon) == 0x0002A0, "Member 'UUMG_TimelineTooltipElement_C::WithIcon' has a wrong offset!");
static_assert(offsetof(UUMG_TimelineTooltipElement_C, PointIndex) == 0x0002A4, "Member 'UUMG_TimelineTooltipElement_C::PointIndex' has a wrong offset!");
static_assert(offsetof(UUMG_TimelineTooltipElement_C, WithSpacer) == 0x0002A8, "Member 'UUMG_TimelineTooltipElement_C::WithSpacer' has a wrong offset!");

}

