#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Vehicle_Tutorial

#include "Basic.hpp"

#include "Squad_structs.hpp"
#include "Engine_structs.hpp"
#include "EATGMProperties_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.ExecuteUbergraph_W_Vehicle_Tutorial
// 0x0070 (0x0070 - 0x0000)
struct W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APawn* NewPawn)>         K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             CallFunc_GetSoldier_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_NewPawn;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UHorizontalBox*>                 K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller_1;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             CallFunc_GetSoldier_ReturnValue_1;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial) == 0x000008, "Wrong alignment on W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial");
static_assert(sizeof(W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial) == 0x000070, "Wrong size on W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial");
static_assert(offsetof(W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial, EntryPoint) == 0x000000, "Member 'W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000020, "Member 'W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial, CallFunc_GetSoldier_ReturnValue) == 0x000030, "Member 'W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial::CallFunc_GetSoldier_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial, K2Node_CustomEvent_NewPawn) == 0x000038, "Member 'W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial::K2Node_CustomEvent_NewPawn' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial, K2Node_MakeArray_Array) == 0x000040, "Member 'W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000050, "Member 'W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial, K2Node_DynamicCast_AsSQPlayer_Controller_1) == 0x000058, "Member 'W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial::K2Node_DynamicCast_AsSQPlayer_Controller_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial, CallFunc_GetSoldier_ReturnValue_1) == 0x000068, "Member 'W_Vehicle_Tutorial_C_ExecuteUbergraph_W_Vehicle_Tutorial::CallFunc_GetSoldier_ReturnValue_1' has a wrong offset!");

// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.PawnChanged
// 0x0008 (0x0008 - 0x0000)
struct W_Vehicle_Tutorial_C_PawnChanged final
{
public:
	class APawn*                                  NewPawn;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Vehicle_Tutorial_C_PawnChanged) == 0x000008, "Wrong alignment on W_Vehicle_Tutorial_C_PawnChanged");
static_assert(sizeof(W_Vehicle_Tutorial_C_PawnChanged) == 0x000008, "Wrong size on W_Vehicle_Tutorial_C_PawnChanged");
static_assert(offsetof(W_Vehicle_Tutorial_C_PawnChanged, NewPawn) == 0x000000, "Member 'W_Vehicle_Tutorial_C_PawnChanged::NewPawn' has a wrong offset!");

// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.Refresh Vehicle Reference
// 0x0020 (0x0020 - 0x0000)
struct W_Vehicle_Tutorial_C_Refresh_Vehicle_Reference final
{
public:
	class ASQVehicle*                             NewVehicle;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(W_Vehicle_Tutorial_C_Refresh_Vehicle_Reference) == 0x000008, "Wrong alignment on W_Vehicle_Tutorial_C_Refresh_Vehicle_Reference");
static_assert(sizeof(W_Vehicle_Tutorial_C_Refresh_Vehicle_Reference) == 0x000020, "Wrong size on W_Vehicle_Tutorial_C_Refresh_Vehicle_Reference");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Vehicle_Reference, NewVehicle) == 0x000000, "Member 'W_Vehicle_Tutorial_C_Refresh_Vehicle_Reference::NewVehicle' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Vehicle_Reference, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_Vehicle_Tutorial_C_Refresh_Vehicle_Reference::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Vehicle_Reference, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'W_Vehicle_Tutorial_C_Refresh_Vehicle_Reference::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.Refresh Visibility
// 0x0118 (0x0118 - 0x0000)
struct W_Vehicle_Tutorial_C_Refresh_Visibility final
{
public:
	bool                                          IsDriver;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCanDesignate;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowFocusZoomKey_ShouldShowFocusZoomKey; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowZoomWhileADSKey_ShouldShowZoomWhileADSKey; // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQDeployableTripodVehicle*             K2Node_DynamicCast_AsSQDeployable_Tripod_Vehicle;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQHelicopter2*                         K2Node_DynamicCast_AsSQHelicopter_2;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQGroundVehicle*                       K2Node_DynamicCast_AsSQGround_Vehicle;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQWeapon*                              K2Node_DynamicCast_AsSQWeapon;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleSmokeGenerator*               K2Node_DynamicCast_AsSQVehicle_Smoke_Generator;    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanToggleFiremode_ReturnValue;            // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleSeat*                         CallFunc_GetSeatPawn_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicleTurretClosedTop*              K2Node_DynamicCast_AsSQVehicle_Turret_Closed_Top;  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanDesignateForSeat_Can_Designate;        // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBox*                         CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBox*                         CallFunc_Array_Get_Item_1;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleSeatComponent*                CallFunc_Array_Get_Item_2;                         // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQHelicopter2*                         K2Node_DynamicCast_AsSQHelicopter_2_1;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleSeatComponent*                CallFunc_GetDriverSeat_ReturnValue;                // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQGroundVehicle*                       K2Node_DynamicCast_AsSQGround_Vehicle_1;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleSeat*                         CallFunc_GetSeatPawn_ReturnValue_1;                // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicleTurretClosedTop*              K2Node_DynamicCast_AsSQVehicle_Turret_Closed_Top_1; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveData_UI_C*                         CallFunc_Get_UI_Save_Data_UI_Save_Data;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Vehicle_Tutorial_C_Refresh_Visibility) == 0x000008, "Wrong alignment on W_Vehicle_Tutorial_C_Refresh_Visibility");
static_assert(sizeof(W_Vehicle_Tutorial_C_Refresh_Visibility) == 0x000118, "Wrong size on W_Vehicle_Tutorial_C_Refresh_Visibility");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, IsDriver) == 0x000000, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::IsDriver' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, bCanDesignate) == 0x000001, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::bCanDesignate' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, Temp_int_Array_Index_Variable) == 0x000004, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_ShouldShowFocusZoomKey_ShouldShowFocusZoomKey) == 0x000008, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_ShouldShowFocusZoomKey_ShouldShowFocusZoomKey' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_ShouldShowZoomWhileADSKey_ShouldShowZoomWhileADSKey) == 0x000014, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_ShouldShowZoomWhileADSKey_ShouldShowZoomWhileADSKey' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_IsValid_ReturnValue) == 0x000015, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, K2Node_DynamicCast_AsSQDeployable_Tripod_Vehicle) == 0x000018, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::K2Node_DynamicCast_AsSQDeployable_Tripod_Vehicle' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, K2Node_DynamicCast_AsSQHelicopter_2) == 0x000028, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::K2Node_DynamicCast_AsSQHelicopter_2' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, K2Node_DynamicCast_AsSQGround_Vehicle) == 0x000038, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::K2Node_DynamicCast_AsSQGround_Vehicle' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, K2Node_DynamicCast_AsSQWeapon) == 0x000048, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::K2Node_DynamicCast_AsSQWeapon' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, K2Node_DynamicCast_bSuccess_3) == 0x000050, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, K2Node_DynamicCast_AsSQVehicle_Smoke_Generator) == 0x000058, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::K2Node_DynamicCast_AsSQVehicle_Smoke_Generator' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, K2Node_DynamicCast_bSuccess_4) == 0x000060, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_CanToggleFiremode_ReturnValue) == 0x000061, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_CanToggleFiremode_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_IsValid_ReturnValue_1) == 0x000062, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_GetSeatPawn_ReturnValue) == 0x000068, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_GetSeatPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, K2Node_DynamicCast_AsSQVehicle_Turret_Closed_Top) == 0x000070, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::K2Node_DynamicCast_AsSQVehicle_Turret_Closed_Top' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, K2Node_DynamicCast_bSuccess_5) == 0x000078, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, Temp_byte_Variable) == 0x000079, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_CanDesignateForSeat_Can_Designate) == 0x00007A, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_CanDesignateForSeat_Can_Designate' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, Temp_byte_Variable_1) == 0x00007B, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, Temp_bool_Variable) == 0x00007C, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, K2Node_Select_Default) == 0x00007D, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, Temp_int_Array_Index_Variable_1) == 0x000084, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_Array_Get_Item) == 0x000088, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_GetVisibility_ReturnValue) == 0x000098, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000099, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_Array_Length_ReturnValue_1) == 0x00009C, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_Array_Get_Item_2) == 0x0000A8, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000B0, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000B1, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, Temp_byte_Variable_2) == 0x0000B2, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, K2Node_DynamicCast_AsSQHelicopter_2_1) == 0x0000B8, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::K2Node_DynamicCast_AsSQHelicopter_2_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, K2Node_DynamicCast_bSuccess_6) == 0x0000C0, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, Temp_byte_Variable_3) == 0x0000C1, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_GetDriverSeat_ReturnValue) == 0x0000C8, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_GetDriverSeat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0000D0, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, Temp_bool_Variable_1) == 0x0000D1, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, K2Node_DynamicCast_AsSQGround_Vehicle_1) == 0x0000D8, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::K2Node_DynamicCast_AsSQGround_Vehicle_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, K2Node_DynamicCast_bSuccess_7) == 0x0000E0, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x0000E1, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, K2Node_Select_Default_1) == 0x0000E2, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_IsValid_ReturnValue_2) == 0x0000E3, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_GetSeatPawn_ReturnValue_1) == 0x0000E8, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_GetSeatPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, K2Node_DynamicCast_AsSQVehicle_Turret_Closed_Top_1) == 0x0000F0, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::K2Node_DynamicCast_AsSQVehicle_Turret_Closed_Top_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, K2Node_DynamicCast_bSuccess_8) == 0x0000F8, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0000F9, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_Get_UI_Save_Data_UI_Save_Data) == 0x000100, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_Get_UI_Save_Data_UI_Save_Data' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, Temp_int_Loop_Counter_Variable_1) == 0x000108, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_Less_IntInt_ReturnValue_1) == 0x00010C, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Refresh_Visibility, CallFunc_Add_IntInt_ReturnValue_1) == 0x000110, "Member 'W_Vehicle_Tutorial_C_Refresh_Visibility::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.Set Engine Text
// 0x00C8 (0x00C8 - 0x0000)
struct W_Vehicle_Tutorial_C_Set_Engine_Text final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0070(0x0018)()
	TScriptInterface<class ISQHelicopterInstruments> K2Node_DynamicCast_AsSQHelicopter_Instruments;     // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQGroundVehicle*                       K2Node_DynamicCast_AsSQGround_Vehicle;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEngineActive_ReturnValue;               // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x00B0(0x0018)()
};
static_assert(alignof(W_Vehicle_Tutorial_C_Set_Engine_Text) == 0x000008, "Wrong alignment on W_Vehicle_Tutorial_C_Set_Engine_Text");
static_assert(sizeof(W_Vehicle_Tutorial_C_Set_Engine_Text) == 0x0000C8, "Wrong size on W_Vehicle_Tutorial_C_Set_Engine_Text");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_Engine_Text, Temp_bool_Variable) == 0x000000, "Member 'W_Vehicle_Tutorial_C_Set_Engine_Text::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_Engine_Text, Temp_text_Variable) == 0x000008, "Member 'W_Vehicle_Tutorial_C_Set_Engine_Text::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_Engine_Text, Temp_text_Variable_1) == 0x000020, "Member 'W_Vehicle_Tutorial_C_Set_Engine_Text::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_Engine_Text, Temp_bool_Variable_1) == 0x000038, "Member 'W_Vehicle_Tutorial_C_Set_Engine_Text::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_Engine_Text, Temp_bool_Variable_2) == 0x000039, "Member 'W_Vehicle_Tutorial_C_Set_Engine_Text::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_Engine_Text, K2Node_Select_Default) == 0x000040, "Member 'W_Vehicle_Tutorial_C_Set_Engine_Text::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_Engine_Text, Temp_text_Variable_2) == 0x000058, "Member 'W_Vehicle_Tutorial_C_Set_Engine_Text::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_Engine_Text, Temp_text_Variable_3) == 0x000070, "Member 'W_Vehicle_Tutorial_C_Set_Engine_Text::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_Engine_Text, K2Node_DynamicCast_AsSQHelicopter_Instruments) == 0x000088, "Member 'W_Vehicle_Tutorial_C_Set_Engine_Text::K2Node_DynamicCast_AsSQHelicopter_Instruments' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_Engine_Text, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'W_Vehicle_Tutorial_C_Set_Engine_Text::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_Engine_Text, K2Node_DynamicCast_AsSQGround_Vehicle) == 0x0000A0, "Member 'W_Vehicle_Tutorial_C_Set_Engine_Text::K2Node_DynamicCast_AsSQGround_Vehicle' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_Engine_Text, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'W_Vehicle_Tutorial_C_Set_Engine_Text::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_Engine_Text, CallFunc_IsEngineActive_ReturnValue) == 0x0000A9, "Member 'W_Vehicle_Tutorial_C_Set_Engine_Text::CallFunc_IsEngineActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_Engine_Text, K2Node_Select_Default_1) == 0x0000B0, "Member 'W_Vehicle_Tutorial_C_Set_Engine_Text::K2Node_Select_Default_1' has a wrong offset!");

// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.CanDesignateForSeat
// 0x0050 (0x0050 - 0x0000)
struct W_Vehicle_Tutorial_C_CanDesignateForSeat final
{
public:
	int32                                         InSeatIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Designate;                                     // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USQVehicleSeatComponent*>        LVicSeats;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class USQVehicleSeatComponent*                CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleSeat*                         CallFunc_GetSeatPawn_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicleTurretClosedTop*              K2Node_DynamicCast_AsSQVehicle_Turret_Closed_Top;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USQVehicleSeatComponent*>        CallFunc_GetSeats_ReturnValue;                     // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(W_Vehicle_Tutorial_C_CanDesignateForSeat) == 0x000008, "Wrong alignment on W_Vehicle_Tutorial_C_CanDesignateForSeat");
static_assert(sizeof(W_Vehicle_Tutorial_C_CanDesignateForSeat) == 0x000050, "Wrong size on W_Vehicle_Tutorial_C_CanDesignateForSeat");
static_assert(offsetof(W_Vehicle_Tutorial_C_CanDesignateForSeat, InSeatIndex) == 0x000000, "Member 'W_Vehicle_Tutorial_C_CanDesignateForSeat::InSeatIndex' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_CanDesignateForSeat, Can_Designate) == 0x000004, "Member 'W_Vehicle_Tutorial_C_CanDesignateForSeat::Can_Designate' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_CanDesignateForSeat, LVicSeats) == 0x000008, "Member 'W_Vehicle_Tutorial_C_CanDesignateForSeat::LVicSeats' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_CanDesignateForSeat, CallFunc_Array_Get_Item) == 0x000018, "Member 'W_Vehicle_Tutorial_C_CanDesignateForSeat::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_CanDesignateForSeat, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'W_Vehicle_Tutorial_C_CanDesignateForSeat::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_CanDesignateForSeat, CallFunc_GetSeatPawn_ReturnValue) == 0x000028, "Member 'W_Vehicle_Tutorial_C_CanDesignateForSeat::CallFunc_GetSeatPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_CanDesignateForSeat, K2Node_DynamicCast_AsSQVehicle_Turret_Closed_Top) == 0x000030, "Member 'W_Vehicle_Tutorial_C_CanDesignateForSeat::K2Node_DynamicCast_AsSQVehicle_Turret_Closed_Top' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_CanDesignateForSeat, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'W_Vehicle_Tutorial_C_CanDesignateForSeat::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_CanDesignateForSeat, CallFunc_GetSeats_ReturnValue) == 0x000040, "Member 'W_Vehicle_Tutorial_C_CanDesignateForSeat::CallFunc_GetSeats_ReturnValue' has a wrong offset!");

// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.Set ATGM Tips
// 0x0110 (0x0110 - 0x0000)
struct W_Vehicle_Tutorial_C_Set_ATGM_Tips final
{
public:
	TSet<EATGMProperties>                         WeaponProperties;                                  // 0x0000(0x0050)(Edit, BlueprintVisible)
	EATGMProperties                               Temp_byte_Variable;                                // 0x0050(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EATGMProperties                               Temp_byte_Variable_1;                              // 0x0051(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EATGMProperties                               Temp_byte_Variable_2;                              // 0x0052(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<EATGMProperties>                         K2Node_MakeVariable_MakeVariableOutput;            // 0x0058(0x0050)()
	class ASQVehicleWeaponTOW*                    K2Node_DynamicCast_AsSQVehicle_Weapon_TOW;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<EATGMProperties>                         CallFunc_DetermineAtgmProperties_OutProperties;    // 0x00B8(0x0050)()
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Contains_ReturnValue_1;               // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Contains_ReturnValue_2;               // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Vehicle_Tutorial_C_Set_ATGM_Tips) == 0x000008, "Wrong alignment on W_Vehicle_Tutorial_C_Set_ATGM_Tips");
static_assert(sizeof(W_Vehicle_Tutorial_C_Set_ATGM_Tips) == 0x000110, "Wrong size on W_Vehicle_Tutorial_C_Set_ATGM_Tips");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_ATGM_Tips, WeaponProperties) == 0x000000, "Member 'W_Vehicle_Tutorial_C_Set_ATGM_Tips::WeaponProperties' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_ATGM_Tips, Temp_byte_Variable) == 0x000050, "Member 'W_Vehicle_Tutorial_C_Set_ATGM_Tips::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_ATGM_Tips, Temp_byte_Variable_1) == 0x000051, "Member 'W_Vehicle_Tutorial_C_Set_ATGM_Tips::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_ATGM_Tips, Temp_byte_Variable_2) == 0x000052, "Member 'W_Vehicle_Tutorial_C_Set_ATGM_Tips::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_ATGM_Tips, Temp_bool_Variable) == 0x000053, "Member 'W_Vehicle_Tutorial_C_Set_ATGM_Tips::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_ATGM_Tips, Temp_byte_Variable_3) == 0x000054, "Member 'W_Vehicle_Tutorial_C_Set_ATGM_Tips::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_ATGM_Tips, Temp_byte_Variable_4) == 0x000055, "Member 'W_Vehicle_Tutorial_C_Set_ATGM_Tips::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_ATGM_Tips, K2Node_MakeVariable_MakeVariableOutput) == 0x000058, "Member 'W_Vehicle_Tutorial_C_Set_ATGM_Tips::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_ATGM_Tips, K2Node_DynamicCast_AsSQVehicle_Weapon_TOW) == 0x0000A8, "Member 'W_Vehicle_Tutorial_C_Set_ATGM_Tips::K2Node_DynamicCast_AsSQVehicle_Weapon_TOW' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_ATGM_Tips, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'W_Vehicle_Tutorial_C_Set_ATGM_Tips::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_ATGM_Tips, CallFunc_DetermineAtgmProperties_OutProperties) == 0x0000B8, "Member 'W_Vehicle_Tutorial_C_Set_ATGM_Tips::CallFunc_DetermineAtgmProperties_OutProperties' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_ATGM_Tips, CallFunc_Set_Contains_ReturnValue) == 0x000108, "Member 'W_Vehicle_Tutorial_C_Set_ATGM_Tips::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_ATGM_Tips, CallFunc_Set_Contains_ReturnValue_1) == 0x000109, "Member 'W_Vehicle_Tutorial_C_Set_ATGM_Tips::CallFunc_Set_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_ATGM_Tips, CallFunc_Set_Contains_ReturnValue_2) == 0x00010A, "Member 'W_Vehicle_Tutorial_C_Set_ATGM_Tips::CallFunc_Set_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Set_ATGM_Tips, K2Node_Select_Default) == 0x00010B, "Member 'W_Vehicle_Tutorial_C_Set_ATGM_Tips::K2Node_Select_Default' has a wrong offset!");

// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.OnProjectileSpawned
// 0x0028 (0x0028 - 0x0000)
struct W_Vehicle_Tutorial_C_OnProjectileSpawned final
{
public:
	class ASQProjectile*                          SpawnedProjectile;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGuidanceComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class USQGuidanceComponent* GuidanceComponent, EGuidanceLossReason LossReason)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Vehicle_Tutorial_C_OnProjectileSpawned) == 0x000008, "Wrong alignment on W_Vehicle_Tutorial_C_OnProjectileSpawned");
static_assert(sizeof(W_Vehicle_Tutorial_C_OnProjectileSpawned) == 0x000028, "Wrong size on W_Vehicle_Tutorial_C_OnProjectileSpawned");
static_assert(offsetof(W_Vehicle_Tutorial_C_OnProjectileSpawned, SpawnedProjectile) == 0x000000, "Member 'W_Vehicle_Tutorial_C_OnProjectileSpawned::SpawnedProjectile' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_OnProjectileSpawned, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'W_Vehicle_Tutorial_C_OnProjectileSpawned::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_OnProjectileSpawned, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'W_Vehicle_Tutorial_C_OnProjectileSpawned::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_OnProjectileSpawned, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'W_Vehicle_Tutorial_C_OnProjectileSpawned::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.HandleProjectileLostGuidance
// 0x0058 (0x0058 - 0x0000)
struct W_Vehicle_Tutorial_C_HandleProjectileLostGuidance final
{
public:
	class USQGuidanceComponent*                   GuidanceComponent_0;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGuidanceLossReason                           LossReason;                                        // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGuidanceLossReason                           Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Temp_object_Variable_4;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Temp_object_Variable_5;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Temp_object_Variable_6;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Vehicle_Tutorial_C_HandleProjectileLostGuidance) == 0x000008, "Wrong alignment on W_Vehicle_Tutorial_C_HandleProjectileLostGuidance");
static_assert(sizeof(W_Vehicle_Tutorial_C_HandleProjectileLostGuidance) == 0x000058, "Wrong size on W_Vehicle_Tutorial_C_HandleProjectileLostGuidance");
static_assert(offsetof(W_Vehicle_Tutorial_C_HandleProjectileLostGuidance, GuidanceComponent_0) == 0x000000, "Member 'W_Vehicle_Tutorial_C_HandleProjectileLostGuidance::GuidanceComponent_0' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_HandleProjectileLostGuidance, LossReason) == 0x000008, "Member 'W_Vehicle_Tutorial_C_HandleProjectileLostGuidance::LossReason' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_HandleProjectileLostGuidance, Temp_byte_Variable) == 0x000009, "Member 'W_Vehicle_Tutorial_C_HandleProjectileLostGuidance::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_HandleProjectileLostGuidance, Temp_object_Variable) == 0x000010, "Member 'W_Vehicle_Tutorial_C_HandleProjectileLostGuidance::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_HandleProjectileLostGuidance, Temp_object_Variable_1) == 0x000018, "Member 'W_Vehicle_Tutorial_C_HandleProjectileLostGuidance::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_HandleProjectileLostGuidance, Temp_object_Variable_2) == 0x000020, "Member 'W_Vehicle_Tutorial_C_HandleProjectileLostGuidance::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_HandleProjectileLostGuidance, Temp_object_Variable_3) == 0x000028, "Member 'W_Vehicle_Tutorial_C_HandleProjectileLostGuidance::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_HandleProjectileLostGuidance, Temp_object_Variable_4) == 0x000030, "Member 'W_Vehicle_Tutorial_C_HandleProjectileLostGuidance::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_HandleProjectileLostGuidance, Temp_object_Variable_5) == 0x000038, "Member 'W_Vehicle_Tutorial_C_HandleProjectileLostGuidance::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_HandleProjectileLostGuidance, Temp_object_Variable_6) == 0x000040, "Member 'W_Vehicle_Tutorial_C_HandleProjectileLostGuidance::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_HandleProjectileLostGuidance, K2Node_Select_Default) == 0x000048, "Member 'W_Vehicle_Tutorial_C_HandleProjectileLostGuidance::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_HandleProjectileLostGuidance, CallFunc_PlayAnimation_ReturnValue) == 0x000050, "Member 'W_Vehicle_Tutorial_C_HandleProjectileLostGuidance::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.DetermineAtgmProperties
// 0x00F0 (0x00F0 - 0x0000)
struct W_Vehicle_Tutorial_C_DetermineAtgmProperties final
{
public:
	class ASQVehicleWeaponTOW*                    InWeapon;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSet<EATGMProperties>                         OutProperties;                                     // 0x0008(0x0050)(Parm, OutParm)
	TSet<EATGMProperties>                         LResult;                                           // 0x0058(0x0050)(Edit, BlueprintVisible)
	ECollisionChannel                             Temp_byte_Variable;                                // 0x00A8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionChannel                             Temp_byte_Variable_1;                              // 0x00AA(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EATGMProperties                               Temp_byte_Variable_2;                              // 0x00AB(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EATGMProperties                               Temp_byte_Variable_3;                              // 0x00AC(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EATGMProperties                               Temp_byte_Variable_4;                              // 0x00AD(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EATGMProperties                               Temp_byte_Variable_5;                              // 0x00AE(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EATGMProperties                               Temp_byte_Variable_6;                              // 0x00AF(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EATGMProperties                               Temp_byte_Variable_7;                              // 0x00B0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsSQGuided_Projectile;     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQGuidedProjectile*                    CallFunc_TryGetDefaultObjectFor_OutDefaultObject;  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetDefaultObjectFor_ReturnValue;       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ECollisionChannel>                     CallFunc_Map_Keys_Keys;                            // 0x00D8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Vehicle_Tutorial_C_DetermineAtgmProperties) == 0x000008, "Wrong alignment on W_Vehicle_Tutorial_C_DetermineAtgmProperties");
static_assert(sizeof(W_Vehicle_Tutorial_C_DetermineAtgmProperties) == 0x0000F0, "Wrong size on W_Vehicle_Tutorial_C_DetermineAtgmProperties");
static_assert(offsetof(W_Vehicle_Tutorial_C_DetermineAtgmProperties, InWeapon) == 0x000000, "Member 'W_Vehicle_Tutorial_C_DetermineAtgmProperties::InWeapon' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_DetermineAtgmProperties, OutProperties) == 0x000008, "Member 'W_Vehicle_Tutorial_C_DetermineAtgmProperties::OutProperties' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_DetermineAtgmProperties, LResult) == 0x000058, "Member 'W_Vehicle_Tutorial_C_DetermineAtgmProperties::LResult' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_DetermineAtgmProperties, Temp_byte_Variable) == 0x0000A8, "Member 'W_Vehicle_Tutorial_C_DetermineAtgmProperties::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_DetermineAtgmProperties, CallFunc_IsValid_ReturnValue) == 0x0000A9, "Member 'W_Vehicle_Tutorial_C_DetermineAtgmProperties::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_DetermineAtgmProperties, Temp_byte_Variable_1) == 0x0000AA, "Member 'W_Vehicle_Tutorial_C_DetermineAtgmProperties::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_DetermineAtgmProperties, Temp_byte_Variable_2) == 0x0000AB, "Member 'W_Vehicle_Tutorial_C_DetermineAtgmProperties::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_DetermineAtgmProperties, Temp_byte_Variable_3) == 0x0000AC, "Member 'W_Vehicle_Tutorial_C_DetermineAtgmProperties::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_DetermineAtgmProperties, Temp_byte_Variable_4) == 0x0000AD, "Member 'W_Vehicle_Tutorial_C_DetermineAtgmProperties::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_DetermineAtgmProperties, Temp_byte_Variable_5) == 0x0000AE, "Member 'W_Vehicle_Tutorial_C_DetermineAtgmProperties::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_DetermineAtgmProperties, Temp_byte_Variable_6) == 0x0000AF, "Member 'W_Vehicle_Tutorial_C_DetermineAtgmProperties::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_DetermineAtgmProperties, Temp_byte_Variable_7) == 0x0000B0, "Member 'W_Vehicle_Tutorial_C_DetermineAtgmProperties::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_DetermineAtgmProperties, K2Node_ClassDynamicCast_AsSQGuided_Projectile) == 0x0000B8, "Member 'W_Vehicle_Tutorial_C_DetermineAtgmProperties::K2Node_ClassDynamicCast_AsSQGuided_Projectile' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_DetermineAtgmProperties, K2Node_ClassDynamicCast_bSuccess) == 0x0000C0, "Member 'W_Vehicle_Tutorial_C_DetermineAtgmProperties::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_DetermineAtgmProperties, CallFunc_TryGetDefaultObjectFor_OutDefaultObject) == 0x0000C8, "Member 'W_Vehicle_Tutorial_C_DetermineAtgmProperties::CallFunc_TryGetDefaultObjectFor_OutDefaultObject' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_DetermineAtgmProperties, CallFunc_TryGetDefaultObjectFor_ReturnValue) == 0x0000D0, "Member 'W_Vehicle_Tutorial_C_DetermineAtgmProperties::CallFunc_TryGetDefaultObjectFor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_DetermineAtgmProperties, CallFunc_Map_Keys_Keys) == 0x0000D8, "Member 'W_Vehicle_Tutorial_C_DetermineAtgmProperties::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_DetermineAtgmProperties, CallFunc_Set_Contains_ReturnValue) == 0x0000E8, "Member 'W_Vehicle_Tutorial_C_DetermineAtgmProperties::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_DetermineAtgmProperties, CallFunc_Array_Contains_ReturnValue) == 0x0000E9, "Member 'W_Vehicle_Tutorial_C_DetermineAtgmProperties::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_DetermineAtgmProperties, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000EA, "Member 'W_Vehicle_Tutorial_C_DetermineAtgmProperties::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.Unbind Vehicle Delegates
// 0x0048 (0x0048 - 0x0000)
struct W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleInventoryComponent*           CallFunc_GetVehicleInventory_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ASQProjectile* SpawnedProjectile)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleWeaponTOW*                    K2Node_DynamicCast_AsSQVehicle_Weapon_TOW;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class USQGuidanceComponent* GuidanceComponent, EGuidanceLossReason LossReason)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates) == 0x000008, "Wrong alignment on W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates");
static_assert(sizeof(W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates) == 0x000048, "Wrong size on W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates");
static_assert(offsetof(W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates, CallFunc_GetVehicleInventory_ReturnValue) == 0x000008, "Member 'W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates::CallFunc_GetVehicleInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates, CallFunc_IsValid_ReturnValue_2) == 0x000020, "Member 'W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates, K2Node_DynamicCast_AsSQVehicle_Weapon_TOW) == 0x000028, "Member 'W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates::K2Node_DynamicCast_AsSQVehicle_Weapon_TOW' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'W_Vehicle_Tutorial_C_Unbind_Vehicle_Delegates::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.On Seat Changed
// 0x0078 (0x0078 - 0x0000)
struct W_Vehicle_Tutorial_C_On_Seat_Changed final
{
public:
	class ASQSoldier*                             Soldier_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleSeatComponent*                FromSeat;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleSeatComponent*                ToSeat;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleInventoryComponent*           SeatInventory;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleSeatComponent*                NewSeat;                                           // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleInventoryComponent*           CallFunc_GetSeatPawnInventory_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleInventoryComponent*           CallFunc_GetSeatPawnInventory_ReturnValue_1;       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ASQEquipableItem* NewItem)> K2Node_CreateDelegate_OutputDelegate;              // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             CallFunc_GetSQVehicle_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ASQEquipableItem* NewItem)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(W_Vehicle_Tutorial_C_On_Seat_Changed) == 0x000008, "Wrong alignment on W_Vehicle_Tutorial_C_On_Seat_Changed");
static_assert(sizeof(W_Vehicle_Tutorial_C_On_Seat_Changed) == 0x000078, "Wrong size on W_Vehicle_Tutorial_C_On_Seat_Changed");
static_assert(offsetof(W_Vehicle_Tutorial_C_On_Seat_Changed, Soldier_0) == 0x000000, "Member 'W_Vehicle_Tutorial_C_On_Seat_Changed::Soldier_0' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_On_Seat_Changed, FromSeat) == 0x000008, "Member 'W_Vehicle_Tutorial_C_On_Seat_Changed::FromSeat' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_On_Seat_Changed, ToSeat) == 0x000010, "Member 'W_Vehicle_Tutorial_C_On_Seat_Changed::ToSeat' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_On_Seat_Changed, SeatInventory) == 0x000018, "Member 'W_Vehicle_Tutorial_C_On_Seat_Changed::SeatInventory' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_On_Seat_Changed, NewSeat) == 0x000020, "Member 'W_Vehicle_Tutorial_C_On_Seat_Changed::NewSeat' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_On_Seat_Changed, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'W_Vehicle_Tutorial_C_On_Seat_Changed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_On_Seat_Changed, CallFunc_GetSeatPawnInventory_ReturnValue) == 0x000030, "Member 'W_Vehicle_Tutorial_C_On_Seat_Changed::CallFunc_GetSeatPawnInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_On_Seat_Changed, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'W_Vehicle_Tutorial_C_On_Seat_Changed::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_On_Seat_Changed, CallFunc_IsValid_ReturnValue_2) == 0x000039, "Member 'W_Vehicle_Tutorial_C_On_Seat_Changed::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_On_Seat_Changed, CallFunc_GetSeatPawnInventory_ReturnValue_1) == 0x000040, "Member 'W_Vehicle_Tutorial_C_On_Seat_Changed::CallFunc_GetSeatPawnInventory_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_On_Seat_Changed, CallFunc_IsValid_ReturnValue_3) == 0x000048, "Member 'W_Vehicle_Tutorial_C_On_Seat_Changed::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_On_Seat_Changed, K2Node_CreateDelegate_OutputDelegate) == 0x00004C, "Member 'W_Vehicle_Tutorial_C_On_Seat_Changed::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_On_Seat_Changed, CallFunc_IsValid_ReturnValue_4) == 0x00005C, "Member 'W_Vehicle_Tutorial_C_On_Seat_Changed::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_On_Seat_Changed, CallFunc_GetSQVehicle_ReturnValue) == 0x000060, "Member 'W_Vehicle_Tutorial_C_On_Seat_Changed::CallFunc_GetSQVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_On_Seat_Changed, K2Node_CreateDelegate_OutputDelegate_1) == 0x000068, "Member 'W_Vehicle_Tutorial_C_On_Seat_Changed::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.OnSwitchWeapon
// 0x0038 (0x0038 - 0x0000)
struct W_Vehicle_Tutorial_C_OnSwitchWeapon final
{
public:
	class ASQEquipableItem*                       SwitchedToItem;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicleWeaponTOW*                    K2Node_DynamicCast_AsSQVehicle_Weapon_TOW;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ASQProjectile* SpawnedProjectile)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleWeaponTOW*                    K2Node_DynamicCast_AsSQVehicle_Weapon_TOW_1;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Vehicle_Tutorial_C_OnSwitchWeapon) == 0x000008, "Wrong alignment on W_Vehicle_Tutorial_C_OnSwitchWeapon");
static_assert(sizeof(W_Vehicle_Tutorial_C_OnSwitchWeapon) == 0x000038, "Wrong size on W_Vehicle_Tutorial_C_OnSwitchWeapon");
static_assert(offsetof(W_Vehicle_Tutorial_C_OnSwitchWeapon, SwitchedToItem) == 0x000000, "Member 'W_Vehicle_Tutorial_C_OnSwitchWeapon::SwitchedToItem' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_OnSwitchWeapon, K2Node_DynamicCast_AsSQVehicle_Weapon_TOW) == 0x000008, "Member 'W_Vehicle_Tutorial_C_OnSwitchWeapon::K2Node_DynamicCast_AsSQVehicle_Weapon_TOW' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_OnSwitchWeapon, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'W_Vehicle_Tutorial_C_OnSwitchWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_OnSwitchWeapon, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'W_Vehicle_Tutorial_C_OnSwitchWeapon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_OnSwitchWeapon, K2Node_DynamicCast_AsSQVehicle_Weapon_TOW_1) == 0x000028, "Member 'W_Vehicle_Tutorial_C_OnSwitchWeapon::K2Node_DynamicCast_AsSQVehicle_Weapon_TOW_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_OnSwitchWeapon, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'W_Vehicle_Tutorial_C_OnSwitchWeapon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.SetSoldier
// 0x0030 (0x0030 - 0x0000)
struct W_Vehicle_Tutorial_C_SetSoldier final
{
public:
	class ASQSoldier*                             NewSoldier;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ASQSoldier* Soldier, class USQVehicleSeatComponent* FromSeat, class USQVehicleSeatComponent* ToSeat)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class ASQSoldier* Soldier, class USQVehicleSeatComponent* FromSeat, class USQVehicleSeatComponent* ToSeat)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(W_Vehicle_Tutorial_C_SetSoldier) == 0x000008, "Wrong alignment on W_Vehicle_Tutorial_C_SetSoldier");
static_assert(sizeof(W_Vehicle_Tutorial_C_SetSoldier) == 0x000030, "Wrong size on W_Vehicle_Tutorial_C_SetSoldier");
static_assert(offsetof(W_Vehicle_Tutorial_C_SetSoldier, NewSoldier) == 0x000000, "Member 'W_Vehicle_Tutorial_C_SetSoldier::NewSoldier' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_SetSoldier, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_Vehicle_Tutorial_C_SetSoldier::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_SetSoldier, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'W_Vehicle_Tutorial_C_SetSoldier::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_SetSoldier, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'W_Vehicle_Tutorial_C_SetSoldier::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_SetSoldier, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'W_Vehicle_Tutorial_C_SetSoldier::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.ShouldShowZoomWhileADSKey
// 0x0070 (0x0070 - 0x0000)
struct W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey final
{
public:
	class ASQVehicle*                             Vehicle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleSeatComponent*                VehicleSeat;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldShowZoomWhileADSKey_0;                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleSeat*                         NewLocalVar_1;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             NewLocalVar_0;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleSeat*                         CallFunc_GetSeatPawn_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GenericVehicleOpenTurret_C*         K2Node_DynamicCast_AsBP_Generic_Vehicle_Open_Turret; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GenericDeployableTripodVehicle_C*   K2Node_DynamicCast_AsBP_Generic_Deployable_Tripod_Vehicle; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_GetZoomLevels_ReturnValue;                // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey) == 0x000008, "Wrong alignment on W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey");
static_assert(sizeof(W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey) == 0x000070, "Wrong size on W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey, Vehicle) == 0x000000, "Member 'W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey::Vehicle' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey, VehicleSeat) == 0x000008, "Member 'W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey::VehicleSeat' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey, ShouldShowZoomWhileADSKey_0) == 0x000010, "Member 'W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey::ShouldShowZoomWhileADSKey_0' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey, NewLocalVar_1) == 0x000018, "Member 'W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey, NewLocalVar_0) == 0x000020, "Member 'W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey, CallFunc_GetSeatPawn_ReturnValue) == 0x000030, "Member 'W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey::CallFunc_GetSeatPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey, K2Node_DynamicCast_AsBP_Generic_Vehicle_Open_Turret) == 0x000038, "Member 'W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey::K2Node_DynamicCast_AsBP_Generic_Vehicle_Open_Turret' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey, K2Node_DynamicCast_AsBP_Generic_Deployable_Tripod_Vehicle) == 0x000048, "Member 'W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey::K2Node_DynamicCast_AsBP_Generic_Deployable_Tripod_Vehicle' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey, CallFunc_GetZoomLevels_ReturnValue) == 0x000058, "Member 'W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey::CallFunc_GetZoomLevels_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000068, "Member 'W_Vehicle_Tutorial_C_ShouldShowZoomWhileADSKey::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.ShouldShowFocusZoomKey
// 0x0050 (0x0050 - 0x0000)
struct W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey final
{
public:
	class ASQVehicle*                             Vehicle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleSeatComponent*                VehicleSeat;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldShowFocusZoomKey_0;                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleSeat*                         CallFunc_GetSeatPawn_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicleTurretOpenTop*                K2Node_DynamicCast_AsSQVehicle_Turret_Open_Top;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GenericVehicleOpenTurret_C*         K2Node_DynamicCast_AsBP_Generic_Vehicle_Open_Turret; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GenericDeployableTripodVehicle_C*   K2Node_DynamicCast_AsBP_Generic_Deployable_Tripod_Vehicle; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey) == 0x000008, "Wrong alignment on W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey");
static_assert(sizeof(W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey) == 0x000050, "Wrong size on W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey, Vehicle) == 0x000000, "Member 'W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey::Vehicle' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey, VehicleSeat) == 0x000008, "Member 'W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey::VehicleSeat' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey, ShouldShowFocusZoomKey_0) == 0x000010, "Member 'W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey::ShouldShowFocusZoomKey_0' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey, CallFunc_GetSeatPawn_ReturnValue) == 0x000018, "Member 'W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey::CallFunc_GetSeatPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey, K2Node_DynamicCast_AsSQVehicle_Turret_Open_Top) == 0x000020, "Member 'W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey::K2Node_DynamicCast_AsSQVehicle_Turret_Open_Top' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey, K2Node_DynamicCast_AsBP_Generic_Vehicle_Open_Turret) == 0x000030, "Member 'W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey::K2Node_DynamicCast_AsBP_Generic_Vehicle_Open_Turret' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey, K2Node_DynamicCast_AsBP_Generic_Deployable_Tripod_Vehicle) == 0x000040, "Member 'W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey::K2Node_DynamicCast_AsBP_Generic_Deployable_Tripod_Vehicle' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'W_Vehicle_Tutorial_C_ShouldShowFocusZoomKey::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function W_Vehicle_Tutorial.W_Vehicle_Tutorial_C.RefreshWeapon
// 0x0018 (0x0018 - 0x0000)
struct W_Vehicle_Tutorial_C_RefreshWeapon final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleInventoryComponent*           CallFunc_GetSeatPawnInventory_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Vehicle_Tutorial_C_RefreshWeapon) == 0x000008, "Wrong alignment on W_Vehicle_Tutorial_C_RefreshWeapon");
static_assert(sizeof(W_Vehicle_Tutorial_C_RefreshWeapon) == 0x000018, "Wrong size on W_Vehicle_Tutorial_C_RefreshWeapon");
static_assert(offsetof(W_Vehicle_Tutorial_C_RefreshWeapon, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_Vehicle_Tutorial_C_RefreshWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_RefreshWeapon, CallFunc_GetSeatPawnInventory_ReturnValue) == 0x000008, "Member 'W_Vehicle_Tutorial_C_RefreshWeapon::CallFunc_GetSeatPawnInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Vehicle_Tutorial_C_RefreshWeapon, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'W_Vehicle_Tutorial_C_RefreshWeapon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

