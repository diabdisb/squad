#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Library_SquadUI

#include "Basic.hpp"

#include "MicrophoneVolume_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "Squad_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Library_SquadUI.Library_SquadUI_C.Get UI Save Data
// 0x0038 (0x0038 - 0x0000)
struct Library_SquadUI_C_Get_UI_Save_Data final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveData_UI_C*                         UI_Save_Data;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveData_UI_C*                         Save;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameInstance*                        CallFunc_GetSquadGameInstance_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SquadGameInstance_C*                K2Node_DynamicCast_AsBP_Squad_Game_Instance;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveData_UI_C*                         CallFunc_Get_UI_Data_AsSave_Data_UI;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Library_SquadUI_C_Get_UI_Save_Data) == 0x000008, "Wrong alignment on Library_SquadUI_C_Get_UI_Save_Data");
static_assert(sizeof(Library_SquadUI_C_Get_UI_Save_Data) == 0x000038, "Wrong size on Library_SquadUI_C_Get_UI_Save_Data");
static_assert(offsetof(Library_SquadUI_C_Get_UI_Save_Data, __WorldContext) == 0x000000, "Member 'Library_SquadUI_C_Get_UI_Save_Data::__WorldContext' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Get_UI_Save_Data, UI_Save_Data) == 0x000008, "Member 'Library_SquadUI_C_Get_UI_Save_Data::UI_Save_Data' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Get_UI_Save_Data, Save) == 0x000010, "Member 'Library_SquadUI_C_Get_UI_Save_Data::Save' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Get_UI_Save_Data, CallFunc_GetSquadGameInstance_ReturnValue) == 0x000018, "Member 'Library_SquadUI_C_Get_UI_Save_Data::CallFunc_GetSquadGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Get_UI_Save_Data, K2Node_DynamicCast_AsBP_Squad_Game_Instance) == 0x000020, "Member 'Library_SquadUI_C_Get_UI_Save_Data::K2Node_DynamicCast_AsBP_Squad_Game_Instance' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Get_UI_Save_Data, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Library_SquadUI_C_Get_UI_Save_Data::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Get_UI_Save_Data, CallFunc_Get_UI_Data_AsSave_Data_UI) == 0x000030, "Member 'Library_SquadUI_C_Get_UI_Save_Data::CallFunc_Get_UI_Data_AsSave_Data_UI' has a wrong offset!");

// Function Library_SquadUI.Library_SquadUI_C.Save UI Save Data
// 0x0028 (0x0028 - 0x0000)
struct Library_SquadUI_C_Save_UI_Save_Data final
{
public:
	class USaveData_UI_C*                         SaveGameObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameInstance*                        CallFunc_GetSquadGameInstance_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SquadGameInstance_C*                K2Node_DynamicCast_AsBP_Squad_Game_Instance;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Library_SquadUI_C_Save_UI_Save_Data) == 0x000008, "Wrong alignment on Library_SquadUI_C_Save_UI_Save_Data");
static_assert(sizeof(Library_SquadUI_C_Save_UI_Save_Data) == 0x000028, "Wrong size on Library_SquadUI_C_Save_UI_Save_Data");
static_assert(offsetof(Library_SquadUI_C_Save_UI_Save_Data, SaveGameObject) == 0x000000, "Member 'Library_SquadUI_C_Save_UI_Save_Data::SaveGameObject' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Save_UI_Save_Data, __WorldContext) == 0x000008, "Member 'Library_SquadUI_C_Save_UI_Save_Data::__WorldContext' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Save_UI_Save_Data, CallFunc_GetSquadGameInstance_ReturnValue) == 0x000010, "Member 'Library_SquadUI_C_Save_UI_Save_Data::CallFunc_GetSquadGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Save_UI_Save_Data, K2Node_DynamicCast_AsBP_Squad_Game_Instance) == 0x000018, "Member 'Library_SquadUI_C_Save_UI_Save_Data::K2Node_DynamicCast_AsBP_Squad_Game_Instance' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Save_UI_Save_Data, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Library_SquadUI_C_Save_UI_Save_Data::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Library_SquadUI.Library_SquadUI_C.Get SQHUD Colors
// 0x0030 (0x0030 - 0x0000)
struct Library_SquadUI_C_Get_SQHUD_Colors final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQColorsDataAsset*                     ColorsDataAsset;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Library_SquadUI_C_Get_SQHUD_Colors) == 0x000008, "Wrong alignment on Library_SquadUI_C_Get_SQHUD_Colors");
static_assert(sizeof(Library_SquadUI_C_Get_SQHUD_Colors) == 0x000030, "Wrong size on Library_SquadUI_C_Get_SQHUD_Colors");
static_assert(offsetof(Library_SquadUI_C_Get_SQHUD_Colors, __WorldContext) == 0x000000, "Member 'Library_SquadUI_C_Get_SQHUD_Colors::__WorldContext' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Get_SQHUD_Colors, ColorsDataAsset) == 0x000008, "Member 'Library_SquadUI_C_Get_SQHUD_Colors::ColorsDataAsset' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Get_SQHUD_Colors, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'Library_SquadUI_C_Get_SQHUD_Colors::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Get_SQHUD_Colors, CallFunc_GetHUD_ReturnValue) == 0x000018, "Member 'Library_SquadUI_C_Get_SQHUD_Colors::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Get_SQHUD_Colors, K2Node_DynamicCast_AsSQHUD) == 0x000020, "Member 'Library_SquadUI_C_Get_SQHUD_Colors::K2Node_DynamicCast_AsSQHUD' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Get_SQHUD_Colors, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Library_SquadUI_C_Get_SQHUD_Colors::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Library_SquadUI.Library_SquadUI_C.Add Notification
// 0x0068 (0x0068 - 0x0000)
struct Library_SquadUI_C_Add_Notification final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	ESQNotificationTypes                          Type;                                              // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Custom_Icon;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CustomIconColor;                                   // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreventRepetition;                                 // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_NotificationPanel_C*>         CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_NotificationPanel_C*                 CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Library_SquadUI_C_Add_Notification) == 0x000008, "Wrong alignment on Library_SquadUI_C_Add_Notification");
static_assert(sizeof(Library_SquadUI_C_Add_Notification) == 0x000068, "Wrong size on Library_SquadUI_C_Add_Notification");
static_assert(offsetof(Library_SquadUI_C_Add_Notification, Text) == 0x000000, "Member 'Library_SquadUI_C_Add_Notification::Text' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Add_Notification, Type) == 0x000018, "Member 'Library_SquadUI_C_Add_Notification::Type' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Add_Notification, Custom_Icon) == 0x000020, "Member 'Library_SquadUI_C_Add_Notification::Custom_Icon' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Add_Notification, CustomIconColor) == 0x000028, "Member 'Library_SquadUI_C_Add_Notification::CustomIconColor' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Add_Notification, PreventRepetition) == 0x000038, "Member 'Library_SquadUI_C_Add_Notification::PreventRepetition' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Add_Notification, __WorldContext) == 0x000040, "Member 'Library_SquadUI_C_Add_Notification::__WorldContext' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Add_Notification, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000048, "Member 'Library_SquadUI_C_Add_Notification::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Add_Notification, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000058, "Member 'Library_SquadUI_C_Add_Notification::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_Add_Notification, CallFunc_Array_Get_Item) == 0x000060, "Member 'Library_SquadUI_C_Add_Notification::CallFunc_Array_Get_Item' has a wrong offset!");

// Function Library_SquadUI.Library_SquadUI_C.GetShortName
// 0x0048 (0x0048 - 0x0000)
struct Library_SquadUI_C_GetShortName final
{
public:
	class FName                                   InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Short_Name;                                        // 0x0010(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0028(0x0018)()
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Library_SquadUI_C_GetShortName) == 0x000008, "Wrong alignment on Library_SquadUI_C_GetShortName");
static_assert(sizeof(Library_SquadUI_C_GetShortName) == 0x000048, "Wrong size on Library_SquadUI_C_GetShortName");
static_assert(offsetof(Library_SquadUI_C_GetShortName, InputPin) == 0x000000, "Member 'Library_SquadUI_C_GetShortName::InputPin' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_GetShortName, __WorldContext) == 0x000008, "Member 'Library_SquadUI_C_GetShortName::__WorldContext' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_GetShortName, Short_Name) == 0x000010, "Member 'Library_SquadUI_C_GetShortName::Short_Name' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_GetShortName, CallFunc_Conv_NameToText_ReturnValue) == 0x000028, "Member 'Library_SquadUI_C_GetShortName::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_GetShortName, K2Node_SwitchName_CmpSuccess) == 0x000040, "Member 'Library_SquadUI_C_GetShortName::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_GetShortName, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000041, "Member 'Library_SquadUI_C_GetShortName::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_GetShortName, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000042, "Member 'Library_SquadUI_C_GetShortName::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_GetShortName, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x000043, "Member 'Library_SquadUI_C_GetShortName::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");

// Function Library_SquadUI.Library_SquadUI_C.GetMicrophoneVolume
// 0x0028 (0x0028 - 0x0000)
struct Library_SquadUI_C_GetMicrophoneVolume final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMicrophoneVolume                             DiscreteVolume;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         QuietMaxVolume;                                    // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SilentMaxVolume;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMicrophoneVolume                             Temp_byte_Variable;                                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMicrophoneVolume                             Temp_byte_Variable_1;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMicrophoneVolume                             Temp_byte_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMicrophoneVolume_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMicrophoneVolume                             K2Node_Select_Default;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMicrophoneVolume                             K2Node_Select_Default_1;                           // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Library_SquadUI_C_GetMicrophoneVolume) == 0x000008, "Wrong alignment on Library_SquadUI_C_GetMicrophoneVolume");
static_assert(sizeof(Library_SquadUI_C_GetMicrophoneVolume) == 0x000028, "Wrong size on Library_SquadUI_C_GetMicrophoneVolume");
static_assert(offsetof(Library_SquadUI_C_GetMicrophoneVolume, __WorldContext) == 0x000000, "Member 'Library_SquadUI_C_GetMicrophoneVolume::__WorldContext' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_GetMicrophoneVolume, DiscreteVolume) == 0x000008, "Member 'Library_SquadUI_C_GetMicrophoneVolume::DiscreteVolume' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_GetMicrophoneVolume, QuietMaxVolume) == 0x00000C, "Member 'Library_SquadUI_C_GetMicrophoneVolume::QuietMaxVolume' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_GetMicrophoneVolume, SilentMaxVolume) == 0x000010, "Member 'Library_SquadUI_C_GetMicrophoneVolume::SilentMaxVolume' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_GetMicrophoneVolume, Temp_bool_Variable) == 0x000014, "Member 'Library_SquadUI_C_GetMicrophoneVolume::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_GetMicrophoneVolume, Temp_byte_Variable) == 0x000015, "Member 'Library_SquadUI_C_GetMicrophoneVolume::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_GetMicrophoneVolume, Temp_bool_Variable_1) == 0x000016, "Member 'Library_SquadUI_C_GetMicrophoneVolume::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_GetMicrophoneVolume, Temp_byte_Variable_1) == 0x000017, "Member 'Library_SquadUI_C_GetMicrophoneVolume::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_GetMicrophoneVolume, Temp_byte_Variable_2) == 0x000018, "Member 'Library_SquadUI_C_GetMicrophoneVolume::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_GetMicrophoneVolume, CallFunc_GetMicrophoneVolume_ReturnValue) == 0x00001C, "Member 'Library_SquadUI_C_GetMicrophoneVolume::CallFunc_GetMicrophoneVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_GetMicrophoneVolume, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'Library_SquadUI_C_GetMicrophoneVolume::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_GetMicrophoneVolume, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000021, "Member 'Library_SquadUI_C_GetMicrophoneVolume::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_GetMicrophoneVolume, K2Node_Select_Default) == 0x000022, "Member 'Library_SquadUI_C_GetMicrophoneVolume::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_GetMicrophoneVolume, K2Node_Select_Default_1) == 0x000023, "Member 'Library_SquadUI_C_GetMicrophoneVolume::K2Node_Select_Default_1' has a wrong offset!");

// Function Library_SquadUI.Library_SquadUI_C.ParseKeybind
// 0x0298 (0x0298 - 0x0000)
struct Library_SquadUI_C_ParseKeybind final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Short_Name;                                        // 0x0018(0x0018)(Parm, OutParm)
	class FText                                   L_Axis;                                            // 0x0030(0x0018)(Edit, BlueprintVisible)
	TArray<class FName>                           L_Axis_List;                                       // 0x0048(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetKeysMapedToAxis_Keys;                  // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetKeysMapedToAxis_Keys_1;                // 0x0088(0x0010)(ReferenceParm)
	class FName                                   CallFunc_GetActionKeyName_Name;                    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetActionKeyName_ReturnValue;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetShortName_Short_Name;                  // 0x00B0(0x0018)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x00D0(0x0028)()
	class FName                                   CallFunc_BreakInputAxisKeyMapping_ActionName;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_BreakInputAxisKeyMapping_Key;             // 0x0100(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_BreakInputAxisKeyMapping_Scale;           // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetKeyName_OutName;                       // 0x011C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsKeyboardKey_ReturnValue;            // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item_1;                         // 0x0138(0x0028)()
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakInputAxisKeyMapping_ActionName_1;    // 0x0164(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_BreakInputAxisKeyMapping_Key_1;           // 0x0170(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_BreakInputAxisKeyMapping_Scale_1;         // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetKeyName_OutName_1;                     // 0x018C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsKeyboardKey_ReturnValue_1;          // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0198(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x01DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetShortName_Short_Name_1;                // 0x01E8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0200(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0248(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0260(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0278(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Library_SquadUI_C_ParseKeybind) == 0x000008, "Wrong alignment on Library_SquadUI_C_ParseKeybind");
static_assert(sizeof(Library_SquadUI_C_ParseKeybind) == 0x000298, "Wrong size on Library_SquadUI_C_ParseKeybind");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, InString) == 0x000000, "Member 'Library_SquadUI_C_ParseKeybind::InString' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, __WorldContext) == 0x000010, "Member 'Library_SquadUI_C_ParseKeybind::__WorldContext' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, Short_Name) == 0x000018, "Member 'Library_SquadUI_C_ParseKeybind::Short_Name' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, L_Axis) == 0x000030, "Member 'Library_SquadUI_C_ParseKeybind::L_Axis' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, L_Axis_List) == 0x000048, "Member 'Library_SquadUI_C_ParseKeybind::L_Axis_List' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, Temp_bool_Variable) == 0x000058, "Member 'Library_SquadUI_C_ParseKeybind::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_Conv_StringToName_ReturnValue) == 0x00005C, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'Library_SquadUI_C_ParseKeybind::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_GetKeysMapedToAxis_Keys) == 0x000068, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_GetKeysMapedToAxis_Keys' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_GetKeysMapedToAxis_Keys_1) == 0x000088, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_GetKeysMapedToAxis_Keys_1' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_GetActionKeyName_Name) == 0x000098, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_GetActionKeyName_Name' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_GetActionKeyName_ReturnValue) == 0x0000A0, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_GetActionKeyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_Array_Length_ReturnValue_1) == 0x0000A4, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_Not_PreBool_ReturnValue) == 0x0000A8, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_GetShortName_Short_Name) == 0x0000B0, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_GetShortName_Short_Name' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'Library_SquadUI_C_ParseKeybind::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, Temp_int_Array_Index_Variable_1) == 0x0000CC, "Member 'Library_SquadUI_C_ParseKeybind::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_BreakInputAxisKeyMapping_ActionName) == 0x0000F8, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_BreakInputAxisKeyMapping_ActionName' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_BreakInputAxisKeyMapping_Key) == 0x000100, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_BreakInputAxisKeyMapping_Key' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_BreakInputAxisKeyMapping_Scale) == 0x000118, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_BreakInputAxisKeyMapping_Scale' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_GetKeyName_OutName) == 0x00011C, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_GetKeyName_OutName' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_Key_IsKeyboardKey_ReturnValue) == 0x000124, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_Key_IsKeyboardKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, Temp_int_Loop_Counter_Variable_1) == 0x000128, "Member 'Library_SquadUI_C_ParseKeybind::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_Less_IntInt_ReturnValue_1) == 0x00012C, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_Add_IntInt_ReturnValue_1) == 0x000130, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, Temp_int_Array_Index_Variable_2) == 0x000134, "Member 'Library_SquadUI_C_ParseKeybind::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_Array_Get_Item_1) == 0x000138, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_Array_AddUnique_ReturnValue) == 0x000160, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_BreakInputAxisKeyMapping_ActionName_1) == 0x000164, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_BreakInputAxisKeyMapping_ActionName_1' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_BreakInputAxisKeyMapping_Key_1) == 0x000170, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_BreakInputAxisKeyMapping_Key_1' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_BreakInputAxisKeyMapping_Scale_1) == 0x000188, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_BreakInputAxisKeyMapping_Scale_1' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_GetKeyName_OutName_1) == 0x00018C, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_GetKeyName_OutName_1' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_Key_IsKeyboardKey_ReturnValue_1) == 0x000194, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_Key_IsKeyboardKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, K2Node_MakeStruct_FormatArgumentData) == 0x000198, "Member 'Library_SquadUI_C_ParseKeybind::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_TextIsEmpty_ReturnValue) == 0x0001D8, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_Array_Get_Item_2) == 0x0001DC, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_Array_Length_ReturnValue_2) == 0x0001E4, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_GetShortName_Short_Name_1) == 0x0001E8, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_GetShortName_Short_Name_1' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, K2Node_MakeStruct_FormatArgumentData_1) == 0x000200, "Member 'Library_SquadUI_C_ParseKeybind::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000240, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, K2Node_MakeArray_Array) == 0x000248, "Member 'Library_SquadUI_C_ParseKeybind::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, Temp_int_Loop_Counter_Variable_2) == 0x000258, "Member 'Library_SquadUI_C_ParseKeybind::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_Format_ReturnValue) == 0x000260, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, K2Node_Select_Default) == 0x000278, "Member 'Library_SquadUI_C_ParseKeybind::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_Less_IntInt_ReturnValue_2) == 0x000290, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Library_SquadUI_C_ParseKeybind, CallFunc_Add_IntInt_ReturnValue_2) == 0x000294, "Member 'Library_SquadUI_C_ParseKeybind::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

}

