#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_TicketsTimeline

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ESQVehicle_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Squad_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UMG_TicketsTimeline.UMG_TicketsTimeline_C
// 0x00C8 (0x0328 - 0x0260)
class UUMG_TicketsTimeline_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image;                                             // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_143;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_TimelinePoint_C*                   LineMarker;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MainCanvas;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Team1Name;                                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Team1Name_1;                                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Team2Name;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           TicketsValueVB;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         TimeHB;                                            // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_TimelineGraph_C*                   UMG_TimelineGraph;                                 // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_TimelineHorizontalLine_C*          UMG_TimelineHorizontalLine;                        // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_TimelineTime_C*                    UMG_TimelineTime;                                  // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USQEndStatsComponent*                   EndStatComponent;                                  // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSQTicketChange>                Team1_Tickets;                                     // 0x02D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSQTicketChange>                Team2_Tickets;                                     // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         MaxTickets;                                        // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DataPrepared;                                      // 0x02F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Team1EndTickets;                                   // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Team2EndTickets;                                   // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TimeInterval;                                      // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GraphHeight;                                       // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GraphWidth;                                        // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerTeamID;                                      // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxTicketsFloat2;                                  // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RoundTimeFloat;                                    // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      HistoryMapper;                                     // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_UMG_TicketsTimeline(int32 EntryPoint);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void PrepareData();
	void RequestData();
	void UpdateTeamNames();
	void CreateTicketsLines();
	void UpdateTimeLines();
	void ToGraphPosition(float Time, int32 Tickets, struct FVector2D* Pos);
	void AddEventIcon(struct FSQTicketChangeLinked& TicketChange, struct FVector2D& GraphPos, int32 TeamIndex, int32 EventIndex);
	void AddVehicleIcons();
	void GetDesiredTicketLinesNum(int32 TicketsOffset, int32 TicketsStep, int32* Num);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UMG_TicketsTimeline_C">();
	}
	static class UUMG_TicketsTimeline_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMG_TicketsTimeline_C>();
	}
};
static_assert(alignof(UUMG_TicketsTimeline_C) == 0x000008, "Wrong alignment on UUMG_TicketsTimeline_C");
static_assert(sizeof(UUMG_TicketsTimeline_C) == 0x000328, "Wrong size on UUMG_TicketsTimeline_C");
static_assert(offsetof(UUMG_TicketsTimeline_C, UberGraphFrame) == 0x000260, "Member 'UUMG_TicketsTimeline_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, Image) == 0x000268, "Member 'UUMG_TicketsTimeline_C::Image' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, Image_143) == 0x000270, "Member 'UUMG_TicketsTimeline_C::Image_143' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, LineMarker) == 0x000278, "Member 'UUMG_TicketsTimeline_C::LineMarker' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, MainCanvas) == 0x000280, "Member 'UUMG_TicketsTimeline_C::MainCanvas' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, Team1Name) == 0x000288, "Member 'UUMG_TicketsTimeline_C::Team1Name' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, Team1Name_1) == 0x000290, "Member 'UUMG_TicketsTimeline_C::Team1Name_1' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, Team2Name) == 0x000298, "Member 'UUMG_TicketsTimeline_C::Team2Name' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, TicketsValueVB) == 0x0002A0, "Member 'UUMG_TicketsTimeline_C::TicketsValueVB' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, TimeHB) == 0x0002A8, "Member 'UUMG_TicketsTimeline_C::TimeHB' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, UMG_TimelineGraph) == 0x0002B0, "Member 'UUMG_TicketsTimeline_C::UMG_TimelineGraph' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, UMG_TimelineHorizontalLine) == 0x0002B8, "Member 'UUMG_TicketsTimeline_C::UMG_TimelineHorizontalLine' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, UMG_TimelineTime) == 0x0002C0, "Member 'UUMG_TicketsTimeline_C::UMG_TimelineTime' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, EndStatComponent) == 0x0002C8, "Member 'UUMG_TicketsTimeline_C::EndStatComponent' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, Team1_Tickets) == 0x0002D0, "Member 'UUMG_TicketsTimeline_C::Team1_Tickets' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, Team2_Tickets) == 0x0002E0, "Member 'UUMG_TicketsTimeline_C::Team2_Tickets' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, MaxTickets) == 0x0002F0, "Member 'UUMG_TicketsTimeline_C::MaxTickets' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, DataPrepared) == 0x0002F4, "Member 'UUMG_TicketsTimeline_C::DataPrepared' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, Team1EndTickets) == 0x0002F8, "Member 'UUMG_TicketsTimeline_C::Team1EndTickets' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, Team2EndTickets) == 0x0002FC, "Member 'UUMG_TicketsTimeline_C::Team2EndTickets' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, TimeInterval) == 0x000300, "Member 'UUMG_TicketsTimeline_C::TimeInterval' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, GraphHeight) == 0x000304, "Member 'UUMG_TicketsTimeline_C::GraphHeight' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, GraphWidth) == 0x000308, "Member 'UUMG_TicketsTimeline_C::GraphWidth' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, PlayerTeamID) == 0x00030C, "Member 'UUMG_TicketsTimeline_C::PlayerTeamID' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, MaxTicketsFloat2) == 0x000310, "Member 'UUMG_TicketsTimeline_C::MaxTicketsFloat2' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, RoundTimeFloat) == 0x000314, "Member 'UUMG_TicketsTimeline_C::RoundTimeFloat' has a wrong offset!");
static_assert(offsetof(UUMG_TicketsTimeline_C, HistoryMapper) == 0x000318, "Member 'UUMG_TicketsTimeline_C::HistoryMapper' has a wrong offset!");

}

