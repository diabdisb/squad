#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_Scoreboard

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function UMG_Scoreboard.UMG_Scoreboard_C.ExecuteUbergraph_UMG_Scoreboard
// 0x02A8 (0x02A8 - 0x0000)
struct UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRemainingTime_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00F0(0x0018)()
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0110(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0128(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0168(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x01B8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01D0(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x01F0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0208(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0248(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0258(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0270(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0288(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0298(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard) == 0x000008, "Wrong alignment on UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard");
static_assert(sizeof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard) == 0x0002A8, "Wrong size on UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, EntryPoint) == 0x000000, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, Temp_bool_Variable) == 0x000004, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, Temp_bool_Variable_1) == 0x000005, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, Temp_bool_Variable_2) == 0x000006, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, Temp_text_Variable) == 0x000008, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, CallFunc_GetSquadGameState_Return_Value) == 0x000020, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::CallFunc_GetSquadGameState_Return_Value' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, CallFunc_GetRemainingTime_ReturnValue) == 0x000028, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::CallFunc_GetRemainingTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, CallFunc_Percent_IntInt_ReturnValue) == 0x000030, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, CallFunc_Divide_IntInt_ReturnValue) == 0x000034, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000038, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C0, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, K2Node_MakeArray_Array) == 0x0000C8, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, CallFunc_Conv_IntToText_ReturnValue) == 0x0000F0, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000108, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, K2Node_Select_Default) == 0x000110, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, K2Node_MakeStruct_FormatArgumentData_2) == 0x000128, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, K2Node_MakeStruct_FormatArgumentData_3) == 0x000168, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, K2Node_MakeArray_Array_1) == 0x0001A8, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0001B8, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, CallFunc_Format_ReturnValue_1) == 0x0001D0, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0001E8, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, K2Node_Select_Default_1) == 0x0001F0, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, K2Node_MakeStruct_FormatArgumentData_4) == 0x000208, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, K2Node_MakeArray_Array_2) == 0x000248, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, CallFunc_Format_ReturnValue_2) == 0x000258, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, K2Node_Select_Default_2) == 0x000270, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, K2Node_CreateDelegate_OutputDelegate) == 0x000288, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000298, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard, K2Node_Event_IsDesignTime) == 0x0002A0, "Member 'UMG_Scoreboard_C_ExecuteUbergraph_UMG_Scoreboard::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UMG_Scoreboard.UMG_Scoreboard_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UMG_Scoreboard_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_Scoreboard_C_PreConstruct) == 0x000001, "Wrong alignment on UMG_Scoreboard_C_PreConstruct");
static_assert(sizeof(UMG_Scoreboard_C_PreConstruct) == 0x000001, "Wrong size on UMG_Scoreboard_C_PreConstruct");
static_assert(offsetof(UMG_Scoreboard_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UMG_Scoreboard_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

