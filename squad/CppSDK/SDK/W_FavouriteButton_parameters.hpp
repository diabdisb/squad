#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_FavouriteButton

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_FavouriteButton.W_FavouriteButton_C.ExecuteUbergraph_W_FavouriteButton
// 0x0020 (0x0020 - 0x0000)
struct W_FavouriteButton_C_ExecuteUbergraph_W_FavouriteButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bSelected;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_MainMenuButton_C*                    K2Node_ComponentBoundEvent_Button;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Delay;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_FavouriteButton_C_ExecuteUbergraph_W_FavouriteButton) == 0x000008, "Wrong alignment on W_FavouriteButton_C_ExecuteUbergraph_W_FavouriteButton");
static_assert(sizeof(W_FavouriteButton_C_ExecuteUbergraph_W_FavouriteButton) == 0x000020, "Wrong size on W_FavouriteButton_C_ExecuteUbergraph_W_FavouriteButton");
static_assert(offsetof(W_FavouriteButton_C_ExecuteUbergraph_W_FavouriteButton, EntryPoint) == 0x000000, "Member 'W_FavouriteButton_C_ExecuteUbergraph_W_FavouriteButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_ExecuteUbergraph_W_FavouriteButton, K2Node_ComponentBoundEvent_bSelected) == 0x000004, "Member 'W_FavouriteButton_C_ExecuteUbergraph_W_FavouriteButton::K2Node_ComponentBoundEvent_bSelected' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_ExecuteUbergraph_W_FavouriteButton, K2Node_ComponentBoundEvent_Button) == 0x000008, "Member 'W_FavouriteButton_C_ExecuteUbergraph_W_FavouriteButton::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_ExecuteUbergraph_W_FavouriteButton, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'W_FavouriteButton_C_ExecuteUbergraph_W_FavouriteButton::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_ExecuteUbergraph_W_FavouriteButton, K2Node_CustomEvent_Delay) == 0x000018, "Member 'W_FavouriteButton_C_ExecuteUbergraph_W_FavouriteButton::K2Node_CustomEvent_Delay' has a wrong offset!");

// Function W_FavouriteButton.W_FavouriteButton_C.BndEvt__W_FavouriteButton_Button_Favourite_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_FavouriteButton_C_BndEvt__W_FavouriteButton_Button_Favourite_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_MainMenuButton_C*                    Button;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_FavouriteButton_C_BndEvt__W_FavouriteButton_Button_Favourite_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_FavouriteButton_C_BndEvt__W_FavouriteButton_Button_Favourite_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(sizeof(W_FavouriteButton_C_BndEvt__W_FavouriteButton_Button_Favourite_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x000010, "Wrong size on W_FavouriteButton_C_BndEvt__W_FavouriteButton_Button_Favourite_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(offsetof(W_FavouriteButton_C_BndEvt__W_FavouriteButton_Button_Favourite_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature, bSelected) == 0x000000, "Member 'W_FavouriteButton_C_BndEvt__W_FavouriteButton_Button_Favourite_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature::bSelected' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_BndEvt__W_FavouriteButton_Button_Favourite_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature, Button) == 0x000008, "Member 'W_FavouriteButton_C_BndEvt__W_FavouriteButton_Button_Favourite_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function W_FavouriteButton.W_FavouriteButton_C.ShowButton
// 0x0004 (0x0004 - 0x0000)
struct W_FavouriteButton_C_ShowButton final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_FavouriteButton_C_ShowButton) == 0x000004, "Wrong alignment on W_FavouriteButton_C_ShowButton");
static_assert(sizeof(W_FavouriteButton_C_ShowButton) == 0x000004, "Wrong size on W_FavouriteButton_C_ShowButton");
static_assert(offsetof(W_FavouriteButton_C_ShowButton, Delay) == 0x000000, "Member 'W_FavouriteButton_C_ShowButton::Delay' has a wrong offset!");

// Function W_FavouriteButton.W_FavouriteButton_C.IsFavourite
// 0x0080 (0x0080 - 0x0000)
struct W_FavouriteButton_C_IsFavourite final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Favourite;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Added;                                             // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 L_UniqueId;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class USaveData_UI_C*                         L_Save;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_1;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_2;   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_3;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameInstance*                        CallFunc_GetSquadGameInstance_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetServerUniqueId_OutUniqueId;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetServerUniqueId_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveData_UI_C*                         CallFunc_Get_UI_Save_Data_UI_Save_Data;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_FavouriteButton_C_IsFavourite) == 0x000008, "Wrong alignment on W_FavouriteButton_C_IsFavourite");
static_assert(sizeof(W_FavouriteButton_C_IsFavourite) == 0x000080, "Wrong size on W_FavouriteButton_C_IsFavourite");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, Valid) == 0x000000, "Member 'W_FavouriteButton_C_IsFavourite::Valid' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, Favourite) == 0x000001, "Member 'W_FavouriteButton_C_IsFavourite::Favourite' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, Added) == 0x000002, "Member 'W_FavouriteButton_C_IsFavourite::Added' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, L_UniqueId) == 0x000008, "Member 'W_FavouriteButton_C_IsFavourite::L_UniqueId' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, L_Save) == 0x000018, "Member 'W_FavouriteButton_C_IsFavourite::L_Save' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000020, "Member 'W_FavouriteButton_C_IsFavourite::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, CallFunc_GetSquadGameUserSettings_ReturnValue_1) == 0x000028, "Member 'W_FavouriteButton_C_IsFavourite::CallFunc_GetSquadGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, CallFunc_GetSquadGameUserSettings_ReturnValue_2) == 0x000030, "Member 'W_FavouriteButton_C_IsFavourite::CallFunc_GetSquadGameUserSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, CallFunc_GetSquadGameUserSettings_ReturnValue_3) == 0x000038, "Member 'W_FavouriteButton_C_IsFavourite::CallFunc_GetSquadGameUserSettings_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, CallFunc_GetSquadGameInstance_ReturnValue) == 0x000040, "Member 'W_FavouriteButton_C_IsFavourite::CallFunc_GetSquadGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, CallFunc_Len_ReturnValue) == 0x000048, "Member 'W_FavouriteButton_C_IsFavourite::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'W_FavouriteButton_C_IsFavourite::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004D, "Member 'W_FavouriteButton_C_IsFavourite::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, CallFunc_GetOwningPlayer_ReturnValue) == 0x000050, "Member 'W_FavouriteButton_C_IsFavourite::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, CallFunc_Array_AddUnique_ReturnValue) == 0x000058, "Member 'W_FavouriteButton_C_IsFavourite::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, CallFunc_GetServerUniqueId_OutUniqueId) == 0x000060, "Member 'W_FavouriteButton_C_IsFavourite::CallFunc_GetServerUniqueId_OutUniqueId' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, CallFunc_GetServerUniqueId_ReturnValue) == 0x000070, "Member 'W_FavouriteButton_C_IsFavourite::CallFunc_GetServerUniqueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, CallFunc_Not_PreBool_ReturnValue) == 0x000071, "Member 'W_FavouriteButton_C_IsFavourite::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, CallFunc_BooleanOR_ReturnValue) == 0x000072, "Member 'W_FavouriteButton_C_IsFavourite::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, CallFunc_Array_Contains_ReturnValue) == 0x000073, "Member 'W_FavouriteButton_C_IsFavourite::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, CallFunc_Array_RemoveItem_ReturnValue) == 0x000074, "Member 'W_FavouriteButton_C_IsFavourite::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsFavourite, CallFunc_Get_UI_Save_Data_UI_Save_Data) == 0x000078, "Member 'W_FavouriteButton_C_IsFavourite::CallFunc_Get_UI_Save_Data_UI_Save_Data' has a wrong offset!");

// Function W_FavouriteButton.W_FavouriteButton_C.UpdateFavouriteName
// 0x0020 (0x0020 - 0x0000)
struct W_FavouriteButton_C_UpdateFavouriteName final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0008(0x0018)()
};
static_assert(alignof(W_FavouriteButton_C_UpdateFavouriteName) == 0x000008, "Wrong alignment on W_FavouriteButton_C_UpdateFavouriteName");
static_assert(sizeof(W_FavouriteButton_C_UpdateFavouriteName) == 0x000020, "Wrong size on W_FavouriteButton_C_UpdateFavouriteName");
static_assert(offsetof(W_FavouriteButton_C_UpdateFavouriteName, Temp_bool_Variable) == 0x000000, "Member 'W_FavouriteButton_C_UpdateFavouriteName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_UpdateFavouriteName, K2Node_Select_Default) == 0x000008, "Member 'W_FavouriteButton_C_UpdateFavouriteName::K2Node_Select_Default' has a wrong offset!");

// Function W_FavouriteButton.W_FavouriteButton_C.ToggleFavourite
// 0x0028 (0x0028 - 0x0000)
struct W_FavouriteButton_C_ToggleFavourite final
{
public:
	bool                                          Is_Fave;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Added;                                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 L_UniqueId;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class USaveData_UI_C*                         L_Save;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFavourite_Valid;                        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFavourite_Favourite;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_FavouriteButton_C_ToggleFavourite) == 0x000008, "Wrong alignment on W_FavouriteButton_C_ToggleFavourite");
static_assert(sizeof(W_FavouriteButton_C_ToggleFavourite) == 0x000028, "Wrong size on W_FavouriteButton_C_ToggleFavourite");
static_assert(offsetof(W_FavouriteButton_C_ToggleFavourite, Is_Fave) == 0x000000, "Member 'W_FavouriteButton_C_ToggleFavourite::Is_Fave' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_ToggleFavourite, Added) == 0x000001, "Member 'W_FavouriteButton_C_ToggleFavourite::Added' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_ToggleFavourite, L_UniqueId) == 0x000008, "Member 'W_FavouriteButton_C_ToggleFavourite::L_UniqueId' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_ToggleFavourite, L_Save) == 0x000018, "Member 'W_FavouriteButton_C_ToggleFavourite::L_Save' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_ToggleFavourite, CallFunc_IsFavourite_Valid) == 0x000020, "Member 'W_FavouriteButton_C_ToggleFavourite::CallFunc_IsFavourite_Valid' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_ToggleFavourite, CallFunc_IsFavourite_Favourite) == 0x000021, "Member 'W_FavouriteButton_C_ToggleFavourite::CallFunc_IsFavourite_Favourite' has a wrong offset!");

// Function W_FavouriteButton.W_FavouriteButton_C.IsValidFavourite
// 0x0030 (0x0030 - 0x0000)
struct W_FavouriteButton_C_IsValidFavourite final
{
public:
	TArray<class FString>                         Favourites;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 UniqueID;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	bool                                          Licensed;                                          // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Valid;                                             // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_FavouriteButton_C_IsValidFavourite) == 0x000008, "Wrong alignment on W_FavouriteButton_C_IsValidFavourite");
static_assert(sizeof(W_FavouriteButton_C_IsValidFavourite) == 0x000030, "Wrong size on W_FavouriteButton_C_IsValidFavourite");
static_assert(offsetof(W_FavouriteButton_C_IsValidFavourite, Favourites) == 0x000000, "Member 'W_FavouriteButton_C_IsValidFavourite::Favourites' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsValidFavourite, UniqueID) == 0x000010, "Member 'W_FavouriteButton_C_IsValidFavourite::UniqueID' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsValidFavourite, Licensed) == 0x000020, "Member 'W_FavouriteButton_C_IsValidFavourite::Licensed' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsValidFavourite, Valid) == 0x000021, "Member 'W_FavouriteButton_C_IsValidFavourite::Valid' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsValidFavourite, CallFunc_Array_Contains_ReturnValue) == 0x000022, "Member 'W_FavouriteButton_C_IsValidFavourite::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsValidFavourite, CallFunc_Contains_ReturnValue) == 0x000023, "Member 'W_FavouriteButton_C_IsValidFavourite::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsValidFavourite, CallFunc_Len_ReturnValue) == 0x000024, "Member 'W_FavouriteButton_C_IsValidFavourite::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsValidFavourite, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'W_FavouriteButton_C_IsValidFavourite::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsValidFavourite, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000029, "Member 'W_FavouriteButton_C_IsValidFavourite::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsValidFavourite, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'W_FavouriteButton_C_IsValidFavourite::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsValidFavourite, CallFunc_BooleanAND_ReturnValue_1) == 0x00002B, "Member 'W_FavouriteButton_C_IsValidFavourite::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_IsValidFavourite, CallFunc_BooleanAND_ReturnValue_2) == 0x00002C, "Member 'W_FavouriteButton_C_IsValidFavourite::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function W_FavouriteButton.W_FavouriteButton_C.Update Favourite
// 0x0068 (0x0068 - 0x0000)
struct W_FavouriteButton_C_Update_Favourite final
{
public:
	bool                                          IsLicensed;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ServerId;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UServerListItem_C*                      ItemRow;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameInstance*                        CallFunc_GetSquadGameInstance_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidFavourite_Valid;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetServerUniqueId_OutUniqueId;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetServerUniqueId_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_FavouriteButton_C_Update_Favourite) == 0x000008, "Wrong alignment on W_FavouriteButton_C_Update_Favourite");
static_assert(sizeof(W_FavouriteButton_C_Update_Favourite) == 0x000068, "Wrong size on W_FavouriteButton_C_Update_Favourite");
static_assert(offsetof(W_FavouriteButton_C_Update_Favourite, IsLicensed) == 0x000000, "Member 'W_FavouriteButton_C_Update_Favourite::IsLicensed' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_Update_Favourite, ServerId) == 0x000008, "Member 'W_FavouriteButton_C_Update_Favourite::ServerId' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_Update_Favourite, ItemRow) == 0x000018, "Member 'W_FavouriteButton_C_Update_Favourite::ItemRow' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_Update_Favourite, Temp_byte_Variable) == 0x000020, "Member 'W_FavouriteButton_C_Update_Favourite::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_Update_Favourite, Temp_byte_Variable_1) == 0x000021, "Member 'W_FavouriteButton_C_Update_Favourite::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_Update_Favourite, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000028, "Member 'W_FavouriteButton_C_Update_Favourite::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_Update_Favourite, CallFunc_GetSquadGameInstance_ReturnValue) == 0x000030, "Member 'W_FavouriteButton_C_Update_Favourite::CallFunc_GetSquadGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_Update_Favourite, Temp_bool_Variable) == 0x000038, "Member 'W_FavouriteButton_C_Update_Favourite::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_Update_Favourite, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'W_FavouriteButton_C_Update_Favourite::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_Update_Favourite, CallFunc_GetOwningPlayer_ReturnValue) == 0x000040, "Member 'W_FavouriteButton_C_Update_Favourite::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_Update_Favourite, CallFunc_IsValidFavourite_Valid) == 0x000048, "Member 'W_FavouriteButton_C_Update_Favourite::CallFunc_IsValidFavourite_Valid' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_Update_Favourite, CallFunc_GetServerUniqueId_OutUniqueId) == 0x000050, "Member 'W_FavouriteButton_C_Update_Favourite::CallFunc_GetServerUniqueId_OutUniqueId' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_Update_Favourite, CallFunc_GetServerUniqueId_ReturnValue) == 0x000060, "Member 'W_FavouriteButton_C_Update_Favourite::CallFunc_GetServerUniqueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FavouriteButton_C_Update_Favourite, K2Node_Select_Default) == 0x000061, "Member 'W_FavouriteButton_C_Update_Favourite::K2Node_Select_Default' has a wrong offset!");

}

