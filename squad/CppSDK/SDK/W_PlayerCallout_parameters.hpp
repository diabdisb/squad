#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PlayerCallout

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_PlayerCallout.W_PlayerCallout_C.ExecuteUbergraph_W_PlayerCallout
// 0x0068 (0x0068 - 0x0000)
struct W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_CustomEvent_Texture;                        // 0x0038(0x0028)(HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout) == 0x000008, "Wrong alignment on W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout");
static_assert(sizeof(W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout) == 0x000068, "Wrong size on W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout");
static_assert(offsetof(W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout, EntryPoint) == 0x000000, "Member 'W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout, K2Node_CustomEvent_Loaded) == 0x000008, "Member 'W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout, Temp_object_Variable) == 0x000020, "Member 'W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout, K2Node_DynamicCast_AsTexture_2D) == 0x000028, "Member 'W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout, K2Node_CustomEvent_Texture) == 0x000038, "Member 'W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout::K2Node_CustomEvent_Texture' has a wrong offset!");
static_assert(offsetof(W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000060, "Member 'W_PlayerCallout_C_ExecuteUbergraph_W_PlayerCallout::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function W_PlayerCallout.W_PlayerCallout_C.FillFlag
// 0x0028 (0x0028 - 0x0000)
struct W_PlayerCallout_C_FillFlag final
{
public:
	TSoftObjectPtr<class UTexture2D>              Texture;                                           // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerCallout_C_FillFlag) == 0x000008, "Wrong alignment on W_PlayerCallout_C_FillFlag");
static_assert(sizeof(W_PlayerCallout_C_FillFlag) == 0x000028, "Wrong size on W_PlayerCallout_C_FillFlag");
static_assert(offsetof(W_PlayerCallout_C_FillFlag, Texture) == 0x000000, "Member 'W_PlayerCallout_C_FillFlag::Texture' has a wrong offset!");

// Function W_PlayerCallout.W_PlayerCallout_C.OnLoaded_E7B2E94948BEA97E3E0D34A65BC387B8
// 0x0008 (0x0008 - 0x0000)
struct W_PlayerCallout_C_OnLoaded_E7B2E94948BEA97E3E0D34A65BC387B8 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerCallout_C_OnLoaded_E7B2E94948BEA97E3E0D34A65BC387B8) == 0x000008, "Wrong alignment on W_PlayerCallout_C_OnLoaded_E7B2E94948BEA97E3E0D34A65BC387B8");
static_assert(sizeof(W_PlayerCallout_C_OnLoaded_E7B2E94948BEA97E3E0D34A65BC387B8) == 0x000008, "Wrong size on W_PlayerCallout_C_OnLoaded_E7B2E94948BEA97E3E0D34A65BC387B8");
static_assert(offsetof(W_PlayerCallout_C_OnLoaded_E7B2E94948BEA97E3E0D34A65BC387B8, Loaded) == 0x000000, "Member 'W_PlayerCallout_C_OnLoaded_E7B2E94948BEA97E3E0D34A65BC387B8::Loaded' has a wrong offset!");

// Function W_PlayerCallout.W_PlayerCallout_C.Setup
// 0x0090 (0x0090 - 0x0000)
struct W_PlayerCallout_C_Setup final
{
public:
	class FText                                   TopText_0;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	TSoftObjectPtr<class UTexture2D>              ImageRef;                                          // 0x0018(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FText                                   BottomText_0;                                      // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   InTooltip;                                         // 0x0058(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   InAdditionalText;                                  // 0x0070(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerCallout_C_Setup) == 0x000008, "Wrong alignment on W_PlayerCallout_C_Setup");
static_assert(sizeof(W_PlayerCallout_C_Setup) == 0x000090, "Wrong size on W_PlayerCallout_C_Setup");
static_assert(offsetof(W_PlayerCallout_C_Setup, TopText_0) == 0x000000, "Member 'W_PlayerCallout_C_Setup::TopText_0' has a wrong offset!");
static_assert(offsetof(W_PlayerCallout_C_Setup, ImageRef) == 0x000018, "Member 'W_PlayerCallout_C_Setup::ImageRef' has a wrong offset!");
static_assert(offsetof(W_PlayerCallout_C_Setup, BottomText_0) == 0x000040, "Member 'W_PlayerCallout_C_Setup::BottomText_0' has a wrong offset!");
static_assert(offsetof(W_PlayerCallout_C_Setup, InTooltip) == 0x000058, "Member 'W_PlayerCallout_C_Setup::InTooltip' has a wrong offset!");
static_assert(offsetof(W_PlayerCallout_C_Setup, InAdditionalText) == 0x000070, "Member 'W_PlayerCallout_C_Setup::InAdditionalText' has a wrong offset!");
static_assert(offsetof(W_PlayerCallout_C_Setup, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000088, "Member 'W_PlayerCallout_C_Setup::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function W_PlayerCallout.W_PlayerCallout_C.GetMainTooltipWidget
// 0x0010 (0x0010 - 0x0000)
struct W_PlayerCallout_C_GetMainTooltipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PlayerCallout_C_GetMainTooltipWidget) == 0x000008, "Wrong alignment on W_PlayerCallout_C_GetMainTooltipWidget");
static_assert(sizeof(W_PlayerCallout_C_GetMainTooltipWidget) == 0x000010, "Wrong size on W_PlayerCallout_C_GetMainTooltipWidget");
static_assert(offsetof(W_PlayerCallout_C_GetMainTooltipWidget, ReturnValue) == 0x000000, "Member 'W_PlayerCallout_C_GetMainTooltipWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerCallout_C_GetMainTooltipWidget, CallFunc_TextIsEmpty_ReturnValue) == 0x000008, "Member 'W_PlayerCallout_C_GetMainTooltipWidget::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerCallout_C_GetMainTooltipWidget, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'W_PlayerCallout_C_GetMainTooltipWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_PlayerCallout.W_PlayerCallout_C.SetTextPadding
// 0x0018 (0x0018 - 0x0000)
struct W_PlayerCallout_C_SetTextPadding final
{
public:
	struct FMargin                                InPadding;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerCallout_C_SetTextPadding) == 0x000008, "Wrong alignment on W_PlayerCallout_C_SetTextPadding");
static_assert(sizeof(W_PlayerCallout_C_SetTextPadding) == 0x000018, "Wrong size on W_PlayerCallout_C_SetTextPadding");
static_assert(offsetof(W_PlayerCallout_C_SetTextPadding, InPadding) == 0x000000, "Member 'W_PlayerCallout_C_SetTextPadding::InPadding' has a wrong offset!");
static_assert(offsetof(W_PlayerCallout_C_SetTextPadding, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000010, "Member 'W_PlayerCallout_C_SetTextPadding::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");

// Function W_PlayerCallout.W_PlayerCallout_C.UpdateBottomText
// 0x0018 (0x0018 - 0x0000)
struct W_PlayerCallout_C_UpdateBottomText final
{
public:
	class FText                                   NewText;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_PlayerCallout_C_UpdateBottomText) == 0x000008, "Wrong alignment on W_PlayerCallout_C_UpdateBottomText");
static_assert(sizeof(W_PlayerCallout_C_UpdateBottomText) == 0x000018, "Wrong size on W_PlayerCallout_C_UpdateBottomText");
static_assert(offsetof(W_PlayerCallout_C_UpdateBottomText, NewText) == 0x000000, "Member 'W_PlayerCallout_C_UpdateBottomText::NewText' has a wrong offset!");

}

