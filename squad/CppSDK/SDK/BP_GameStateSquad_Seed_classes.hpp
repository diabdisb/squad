#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameStateSquad_Seed

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_GameStateSquad_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GameStateSquad_Seed.BP_GameStateSquad_Seed_C
// 0x0058 (0x0780 - 0x0728)
class ABP_GameStateSquad_Seed_C final : public ABP_GameStateSquad_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0728(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bGameIsLive;                                       // 0x0730(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_731[0x7];                                      // 0x0731(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnGameIsLive;                                      // 0x0738(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bCountdownActive;                                  // 0x0748(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_749[0x3];                                      // 0x0749(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ServerTimeToFinishCountdown;                       // 0x074C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnCountdownStateChanged;                           // 0x0750(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         PlayersThreshold;                                  // 0x0760(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_764[0x4];                                      // 0x0764(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnPlayerThresholdUpdated;                          // 0x0768(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         SeedTargetPlayerCount;                             // 0x0778(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnGameIsLive__DelegateSignature();
	void OnCountdownStateChanged__DelegateSignature(bool bIsActive, float TimeLeft);
	void OnPlayerThresholdUpdated__DelegateSignature();
	void ExecuteUbergraph_BP_GameStateSquad_Seed(int32 EntryPoint);
	void OnSetSeedTargetPlayerCount(int32 SeedTargetPlayerCount_0);
	void ReceiveBeginPlay();
	void OnRep_bGameIsLive();
	void OnRep_ServerTimeToFinishCountdown();
	void OnRep_PlayersThreshold();

	int32 GetPlayerCountOnServer() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GameStateSquad_Seed_C">();
	}
	static class ABP_GameStateSquad_Seed_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GameStateSquad_Seed_C>();
	}
};
static_assert(alignof(ABP_GameStateSquad_Seed_C) == 0x000008, "Wrong alignment on ABP_GameStateSquad_Seed_C");
static_assert(sizeof(ABP_GameStateSquad_Seed_C) == 0x000780, "Wrong size on ABP_GameStateSquad_Seed_C");
static_assert(offsetof(ABP_GameStateSquad_Seed_C, UberGraphFrame) == 0x000728, "Member 'ABP_GameStateSquad_Seed_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GameStateSquad_Seed_C, bGameIsLive) == 0x000730, "Member 'ABP_GameStateSquad_Seed_C::bGameIsLive' has a wrong offset!");
static_assert(offsetof(ABP_GameStateSquad_Seed_C, OnGameIsLive) == 0x000738, "Member 'ABP_GameStateSquad_Seed_C::OnGameIsLive' has a wrong offset!");
static_assert(offsetof(ABP_GameStateSquad_Seed_C, bCountdownActive) == 0x000748, "Member 'ABP_GameStateSquad_Seed_C::bCountdownActive' has a wrong offset!");
static_assert(offsetof(ABP_GameStateSquad_Seed_C, ServerTimeToFinishCountdown) == 0x00074C, "Member 'ABP_GameStateSquad_Seed_C::ServerTimeToFinishCountdown' has a wrong offset!");
static_assert(offsetof(ABP_GameStateSquad_Seed_C, OnCountdownStateChanged) == 0x000750, "Member 'ABP_GameStateSquad_Seed_C::OnCountdownStateChanged' has a wrong offset!");
static_assert(offsetof(ABP_GameStateSquad_Seed_C, PlayersThreshold) == 0x000760, "Member 'ABP_GameStateSquad_Seed_C::PlayersThreshold' has a wrong offset!");
static_assert(offsetof(ABP_GameStateSquad_Seed_C, OnPlayerThresholdUpdated) == 0x000768, "Member 'ABP_GameStateSquad_Seed_C::OnPlayerThresholdUpdated' has a wrong offset!");
static_assert(offsetof(ABP_GameStateSquad_Seed_C, SeedTargetPlayerCount) == 0x000778, "Member 'ABP_GameStateSquad_Seed_C::SeedTargetPlayerCount' has a wrong offset!");

}

