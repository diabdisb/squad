#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_EndRound

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Squad_structs.hpp"
#include "Engine_structs.hpp"
#include "SQFactionEntry_structs.hpp"


namespace SDK::Params
{

// Function W_EndRound.W_EndRound_C.ExecuteUbergraph_W_EndRound
// 0x0670 (0x0670 - 0x0000)
struct W_EndRound_C_ExecuteUbergraph_W_EndRound final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Is_Showing_Settings_Menu_Showing_Main_Menu; // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_TryGetLocalPlayerTeamId_OutTeamId;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalPlayerTeamId_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQFaction_C*                        CallFunc_TryGetLocalPlayerFaction_OutFaction;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalPlayerFaction_ReturnValue;     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetFactionEntry_Success;               // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQFactionEntry                        CallFunc_TryGetFactionEntry_FactionEntry;          // 0x0090(0x0580)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_611[0x7];                                      // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 K2Node_Select_Default;                             // 0x0618(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_1;                    // 0x0658(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_EndRound_C_ExecuteUbergraph_W_EndRound) == 0x000008, "Wrong alignment on W_EndRound_C_ExecuteUbergraph_W_EndRound");
static_assert(sizeof(W_EndRound_C_ExecuteUbergraph_W_EndRound) == 0x000670, "Wrong size on W_EndRound_C_ExecuteUbergraph_W_EndRound");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, EntryPoint) == 0x000000, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, K2Node_CustomEvent_Loaded) == 0x000008, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, Temp_object_Variable) == 0x000010, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, K2Node_DynamicCast_AsSound_Cue) == 0x000018, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::K2Node_DynamicCast_AsSound_Cue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, Temp_bool_Variable) == 0x000021, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, Temp_bool_Has_Been_Initd_Variable) == 0x000022, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, Temp_bool_IsClosed_Variable) == 0x000023, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, CallFunc_GetHUD_ReturnValue) == 0x000040, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, K2Node_DynamicCast_AsBPI_HUD) == 0x000050, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, CallFunc_Get_Is_Showing_Settings_Menu_Showing_Main_Menu) == 0x000061, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::CallFunc_Get_Is_Showing_Settings_Menu_Showing_Main_Menu' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, K2Node_CreateDelegate_OutputDelegate_1) == 0x000064, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, CallFunc_TryGetLocalPlayerTeamId_OutTeamId) == 0x000074, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::CallFunc_TryGetLocalPlayerTeamId_OutTeamId' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, CallFunc_TryGetLocalPlayerTeamId_ReturnValue) == 0x000078, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::CallFunc_TryGetLocalPlayerTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, CallFunc_TryGetLocalPlayerFaction_OutFaction) == 0x000080, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::CallFunc_TryGetLocalPlayerFaction_OutFaction' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, CallFunc_TryGetLocalPlayerFaction_ReturnValue) == 0x000088, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::CallFunc_TryGetLocalPlayerFaction_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, CallFunc_TryGetFactionEntry_Success) == 0x000089, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::CallFunc_TryGetFactionEntry_Success' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, CallFunc_TryGetFactionEntry_FactionEntry) == 0x000090, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::CallFunc_TryGetFactionEntry_FactionEntry' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000610, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, K2Node_Select_Default) == 0x000618, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000640, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000648, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, CallFunc_GetHUD_ReturnValue_1) == 0x000650, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, K2Node_DynamicCast_AsBPI_HUD_1) == 0x000658, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::K2Node_DynamicCast_AsBPI_HUD_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_ExecuteUbergraph_W_EndRound, K2Node_DynamicCast_bSuccess_2) == 0x000668, "Member 'W_EndRound_C_ExecuteUbergraph_W_EndRound::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function W_EndRound.W_EndRound_C.OnLoaded_4D00979747334CD613094AA5E0E4B4C2
// 0x0008 (0x0008 - 0x0000)
struct W_EndRound_C_OnLoaded_4D00979747334CD613094AA5E0E4B4C2 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_EndRound_C_OnLoaded_4D00979747334CD613094AA5E0E4B4C2) == 0x000008, "Wrong alignment on W_EndRound_C_OnLoaded_4D00979747334CD613094AA5E0E4B4C2");
static_assert(sizeof(W_EndRound_C_OnLoaded_4D00979747334CD613094AA5E0E4B4C2) == 0x000008, "Wrong size on W_EndRound_C_OnLoaded_4D00979747334CD613094AA5E0E4B4C2");
static_assert(offsetof(W_EndRound_C_OnLoaded_4D00979747334CD613094AA5E0E4B4C2, Loaded) == 0x000000, "Member 'W_EndRound_C_OnLoaded_4D00979747334CD613094AA5E0E4B4C2::Loaded' has a wrong offset!");

// Function W_EndRound.W_EndRound_C.Init End Round Screen
// 0x19F0 (0x19F0 - 0x0000)
struct W_EndRound_C_Init_End_Round_Screen final
{
public:
	bool                                          PlayerFromWinningTeam;                             // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQFactionEntry                        L_LoserEntry;                                      // 0x0008(0x0580)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSQFactionEntry                        L_WinnerEntry;                                     // 0x0588(0x0580)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FText                                   L_State_Text;                                      // 0x0B08(0x0018)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0B20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B21[0x7];                                      // 0x0B21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0B28(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0B40(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B59[0x7];                                      // 0x0B59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0B60(0x0018)()
	bool                                          Temp_bool_Variable_2;                              // 0x0B78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B79[0x7];                                      // 0x0B79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_3;                              // 0x0B80(0x0018)()
	bool                                          Temp_bool_Variable_3;                              // 0x0B98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B99[0x7];                                      // 0x0B99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_4;                              // 0x0BA0(0x0018)()
	bool                                          Temp_bool_Variable_4;                              // 0x0BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB9[0x7];                                      // 0x0BB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_5;                              // 0x0BC0(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x0BD8(0x0018)()
	bool                                          Temp_bool_Variable_5;                              // 0x0BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0BF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BF2[0x6];                                      // 0x0BF2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_7;                              // 0x0BF8(0x0018)()
	bool                                          Temp_bool_Variable_7;                              // 0x0C10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C11[0x7];                                      // 0x0C11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_8;                              // 0x0C18(0x0018)()
	bool                                          Temp_bool_Variable_8;                              // 0x0C30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C31[0x7];                                      // 0x0C31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_9;                              // 0x0C38(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0C50(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0C68(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0C80(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_GetTickets_ReturnValue;                   // 0x0C90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C94[0x4];                                      // 0x0C94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0C98(0x0018)()
	int32                                         CallFunc_GetTickets_ReturnValue_1;                 // 0x0CB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB4[0x4];                                      // 0x0CB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0CB8(0x0018)()
	class UBP_SQFactionSetup_C*                   K2Node_DynamicCast_AsBP_SQFaction_Setup;           // 0x0CD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0CD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetFactionEntry_Success;               // 0x0CD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CDA[0x6];                                      // 0x0CDA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQFactionEntry                        CallFunc_TryGetFactionEntry_FactionEntry;          // 0x0CE0(0x0580)(HasGetValueTypeHash)
	class UBP_SQFactionSetup_C*                   K2Node_DynamicCast_AsBP_SQFaction_Setup_1;         // 0x1260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x1268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetFactionEntry_Success_1;             // 0x1269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_126A[0x6];                                     // 0x126A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQFactionEntry                        CallFunc_TryGetFactionEntry_FactionEntry_1;        // 0x1270(0x0580)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x17F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17F1[0x7];                                     // 0x17F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x17F8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x1810(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x1850(0x0018)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x1868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x186C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTickets_ReturnValue_2;                 // 0x1870(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x1874(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1875[0x3];                                     // 0x1875(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x1878(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x1890(0x0018)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x18A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x18A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18AA[0x6];                                     // 0x18AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_3;                           // 0x18B0(0x0018)()
	class FText                                   K2Node_Select_Default_4;                           // 0x18C8(0x0018)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x18E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18E1[0x7];                                     // 0x18E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_5;                           // 0x18E8(0x0018)()
	class FText                                   K2Node_Select_Default_6;                           // 0x1900(0x0018)()
	class FText                                   K2Node_Select_Default_7;                           // 0x1918(0x0018)()
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value;           // 0x1930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_8;                           // 0x1938(0x0018)()
	class FText                                   K2Node_Select_Default_9;                           // 0x1950(0x0018)()
	class ASQTeamState*                           CallFunc_Array_Get_Item;                           // 0x1968(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x1970(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x19B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x19C0(0x0018)()
	int32                                         CallFunc_GetTickets_ReturnValue_3;                 // 0x19D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19DC[0x4];                                     // 0x19DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQTeamState*                           CallFunc_Array_Get_Item_1;                         // 0x19E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x19E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x19E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x19EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_EndRound_C_Init_End_Round_Screen) == 0x000008, "Wrong alignment on W_EndRound_C_Init_End_Round_Screen");
static_assert(sizeof(W_EndRound_C_Init_End_Round_Screen) == 0x0019F0, "Wrong size on W_EndRound_C_Init_End_Round_Screen");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, PlayerFromWinningTeam) == 0x000000, "Member 'W_EndRound_C_Init_End_Round_Screen::PlayerFromWinningTeam' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, L_LoserEntry) == 0x000008, "Member 'W_EndRound_C_Init_End_Round_Screen::L_LoserEntry' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, L_WinnerEntry) == 0x000588, "Member 'W_EndRound_C_Init_End_Round_Screen::L_WinnerEntry' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, L_State_Text) == 0x000B08, "Member 'W_EndRound_C_Init_End_Round_Screen::L_State_Text' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_bool_Variable) == 0x000B20, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_text_Variable) == 0x000B28, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_text_Variable_1) == 0x000B40, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_bool_Variable_1) == 0x000B58, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_text_Variable_2) == 0x000B60, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_bool_Variable_2) == 0x000B78, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_text_Variable_3) == 0x000B80, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_bool_Variable_3) == 0x000B98, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_text_Variable_4) == 0x000BA0, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_bool_Variable_4) == 0x000BB8, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_text_Variable_5) == 0x000BC0, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_text_Variable_6) == 0x000BD8, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_bool_Variable_5) == 0x000BF0, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_bool_Variable_6) == 0x000BF1, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_text_Variable_7) == 0x000BF8, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_bool_Variable_7) == 0x000C10, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_text_Variable_8) == 0x000C18, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_bool_Variable_8) == 0x000C30, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_text_Variable_9) == 0x000C38, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_text_Variable_10) == 0x000C50, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_text_Variable_11) == 0x000C68, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, K2Node_CreateDelegate_OutputDelegate) == 0x000C80, "Member 'W_EndRound_C_Init_End_Round_Screen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_GetTickets_ReturnValue) == 0x000C90, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_GetTickets_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_Conv_IntToText_ReturnValue) == 0x000C98, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_GetTickets_ReturnValue_1) == 0x000CB0, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_GetTickets_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000CB8, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, K2Node_DynamicCast_AsBP_SQFaction_Setup) == 0x000CD0, "Member 'W_EndRound_C_Init_End_Round_Screen::K2Node_DynamicCast_AsBP_SQFaction_Setup' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, K2Node_DynamicCast_bSuccess) == 0x000CD8, "Member 'W_EndRound_C_Init_End_Round_Screen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_TryGetFactionEntry_Success) == 0x000CD9, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_TryGetFactionEntry_Success' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_TryGetFactionEntry_FactionEntry) == 0x000CE0, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_TryGetFactionEntry_FactionEntry' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, K2Node_DynamicCast_AsBP_SQFaction_Setup_1) == 0x001260, "Member 'W_EndRound_C_Init_End_Round_Screen::K2Node_DynamicCast_AsBP_SQFaction_Setup_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, K2Node_DynamicCast_bSuccess_1) == 0x001268, "Member 'W_EndRound_C_Init_End_Round_Screen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_TryGetFactionEntry_Success_1) == 0x001269, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_TryGetFactionEntry_Success_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_TryGetFactionEntry_FactionEntry_1) == 0x001270, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_TryGetFactionEntry_FactionEntry_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, Temp_bool_Variable_9) == 0x0017F0, "Member 'W_EndRound_C_Init_End_Round_Screen::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, K2Node_Select_Default) == 0x0017F8, "Member 'W_EndRound_C_Init_End_Round_Screen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, K2Node_MakeStruct_FormatArgumentData) == 0x001810, "Member 'W_EndRound_C_Init_End_Round_Screen::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_TextToUpper_ReturnValue) == 0x001850, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_Subtract_IntInt_ReturnValue) == 0x001868, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_Abs_Int_ReturnValue) == 0x00186C, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_GetTickets_ReturnValue_2) == 0x001870, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_GetTickets_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_LessEqual_IntInt_ReturnValue) == 0x001874, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, K2Node_Select_Default_1) == 0x001878, "Member 'W_EndRound_C_Init_End_Round_Screen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, K2Node_Select_Default_2) == 0x001890, "Member 'W_EndRound_C_Init_End_Round_Screen::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0018A8, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0018A9, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, K2Node_Select_Default_3) == 0x0018B0, "Member 'W_EndRound_C_Init_End_Round_Screen::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, K2Node_Select_Default_4) == 0x0018C8, "Member 'W_EndRound_C_Init_End_Round_Screen::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0018E0, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, K2Node_Select_Default_5) == 0x0018E8, "Member 'W_EndRound_C_Init_End_Round_Screen::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, K2Node_Select_Default_6) == 0x001900, "Member 'W_EndRound_C_Init_End_Round_Screen::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, K2Node_Select_Default_7) == 0x001918, "Member 'W_EndRound_C_Init_End_Round_Screen::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_GetSquadGameState_Return_Value) == 0x001930, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_GetSquadGameState_Return_Value' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, K2Node_Select_Default_8) == 0x001938, "Member 'W_EndRound_C_Init_End_Round_Screen::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, K2Node_Select_Default_9) == 0x001950, "Member 'W_EndRound_C_Init_End_Round_Screen::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_Array_Get_Item) == 0x001968, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, K2Node_MakeStruct_FormatArgumentData_1) == 0x001970, "Member 'W_EndRound_C_Init_End_Round_Screen::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, K2Node_MakeArray_Array) == 0x0019B0, "Member 'W_EndRound_C_Init_End_Round_Screen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_Format_ReturnValue) == 0x0019C0, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_GetTickets_ReturnValue_3) == 0x0019D8, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_GetTickets_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_Array_Get_Item_1) == 0x0019E0, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0019E8, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_IsValid_ReturnValue) == 0x0019E9, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_Init_End_Round_Screen, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0019EA, "Member 'W_EndRound_C_Init_End_Round_Screen::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_EndRound.W_EndRound_C.RefreshStatus
// 0x0050 (0x0050 - 0x0000)
struct W_EndRound_C_RefreshStatus final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSummaryDataReady_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_EndRound_C_RefreshStatus) == 0x000008, "Wrong alignment on W_EndRound_C_RefreshStatus");
static_assert(sizeof(W_EndRound_C_RefreshStatus) == 0x000050, "Wrong size on W_EndRound_C_RefreshStatus");
static_assert(offsetof(W_EndRound_C_RefreshStatus, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'W_EndRound_C_RefreshStatus::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_RefreshStatus, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'W_EndRound_C_RefreshStatus::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_RefreshStatus, CallFunc_IsSummaryDataReady_ReturnValue) == 0x000018, "Member 'W_EndRound_C_RefreshStatus::CallFunc_IsSummaryDataReady_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_RefreshStatus, CallFunc_GetOwningPlayer_ReturnValue) == 0x000020, "Member 'W_EndRound_C_RefreshStatus::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_RefreshStatus, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000028, "Member 'W_EndRound_C_RefreshStatus::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_RefreshStatus, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_EndRound_C_RefreshStatus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_RefreshStatus, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'W_EndRound_C_RefreshStatus::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_RefreshStatus, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000048, "Member 'W_EndRound_C_RefreshStatus::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");

// Function W_EndRound.W_EndRound_C.UpdateResults
// 0x0040 (0x0040 - 0x0000)
struct W_EndRound_C_UpdateResults final
{
public:
	class USQEndStatsComponent*                   EndStats;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_SecondsToText_TimeText;                   // 0x0028(0x0018)()
};
static_assert(alignof(W_EndRound_C_UpdateResults) == 0x000008, "Wrong alignment on W_EndRound_C_UpdateResults");
static_assert(sizeof(W_EndRound_C_UpdateResults) == 0x000040, "Wrong size on W_EndRound_C_UpdateResults");
static_assert(offsetof(W_EndRound_C_UpdateResults, EndStats) == 0x000000, "Member 'W_EndRound_C_UpdateResults::EndStats' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_UpdateResults, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'W_EndRound_C_UpdateResults::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_UpdateResults, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'W_EndRound_C_UpdateResults::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_UpdateResults, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'W_EndRound_C_UpdateResults::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_UpdateResults, CallFunc_Create_ReturnValue) == 0x000020, "Member 'W_EndRound_C_UpdateResults::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_UpdateResults, CallFunc_SecondsToText_TimeText) == 0x000028, "Member 'W_EndRound_C_UpdateResults::CallFunc_SecondsToText_TimeText' has a wrong offset!");

// Function W_EndRound.W_EndRound_C.SecondsToText
// 0x0220 (0x0220 - 0x0000)
struct W_EndRound_C_SecondsToText final
{
public:
	int32                                         Seconds;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TimeText;                                          // 0x0008(0x0018)(Parm, OutParm)
	int32                                         Sec;                                               // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Minutes;                                           // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Hours;                                             // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0040(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0058(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0070(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00F0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0130(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0140(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0180(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0198(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01B0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0208(0x0018)()
};
static_assert(alignof(W_EndRound_C_SecondsToText) == 0x000008, "Wrong alignment on W_EndRound_C_SecondsToText");
static_assert(sizeof(W_EndRound_C_SecondsToText) == 0x000220, "Wrong size on W_EndRound_C_SecondsToText");
static_assert(offsetof(W_EndRound_C_SecondsToText, Seconds) == 0x000000, "Member 'W_EndRound_C_SecondsToText::Seconds' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, TimeText) == 0x000008, "Member 'W_EndRound_C_SecondsToText::TimeText' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, Sec) == 0x000020, "Member 'W_EndRound_C_SecondsToText::Sec' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, Minutes) == 0x000024, "Member 'W_EndRound_C_SecondsToText::Minutes' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, Hours) == 0x000028, "Member 'W_EndRound_C_SecondsToText::Hours' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, CallFunc_Percent_IntInt_ReturnValue) == 0x00002C, "Member 'W_EndRound_C_SecondsToText::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000030, "Member 'W_EndRound_C_SecondsToText::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, CallFunc_Divide_IntInt_ReturnValue) == 0x000034, "Member 'W_EndRound_C_SecondsToText::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000038, "Member 'W_EndRound_C_SecondsToText::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, CallFunc_Conv_IntToText_ReturnValue) == 0x000040, "Member 'W_EndRound_C_SecondsToText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000058, "Member 'W_EndRound_C_SecondsToText::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, K2Node_MakeStruct_FormatArgumentData) == 0x000070, "Member 'W_EndRound_C_SecondsToText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'W_EndRound_C_SecondsToText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000F0, "Member 'W_EndRound_C_SecondsToText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, K2Node_MakeArray_Array) == 0x000130, "Member 'W_EndRound_C_SecondsToText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, K2Node_MakeStruct_FormatArgumentData_3) == 0x000140, "Member 'W_EndRound_C_SecondsToText::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, CallFunc_Format_ReturnValue) == 0x000180, "Member 'W_EndRound_C_SecondsToText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000198, "Member 'W_EndRound_C_SecondsToText::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001B0, "Member 'W_EndRound_C_SecondsToText::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, CallFunc_Greater_IntInt_ReturnValue) == 0x0001F0, "Member 'W_EndRound_C_SecondsToText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, K2Node_MakeArray_Array_1) == 0x0001F8, "Member 'W_EndRound_C_SecondsToText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_SecondsToText, CallFunc_Format_ReturnValue_1) == 0x000208, "Member 'W_EndRound_C_SecondsToText::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function W_EndRound.W_EndRound_C.FillPlayerCallouts
// 0x0188 (0x0188 - 0x0000)
struct W_EndRound_C_FillPlayerCallouts final
{
public:
	TMap<ESQPlayerCalloutType, class UClass*>     WidgetsMap;                                        // 0x0000(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ESQPlayerCalloutType, class UClass*>     K2Node_MakeVariable_MakeVariableOutput;            // 0x0060(0x0050)()
	struct FSQPlayerCalloutScore                  CallFunc_Array_Get_Item;                           // 0x00B0(0x0018)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetCalloutData_Title;                     // 0x00D0(0x0018)()
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetCalloutData_Flag;                      // 0x00E8(0x0028)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetCalloutData_Name;                      // 0x0110(0x0018)()
	bool                                          CallFunc_GetCalloutData_Valid;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetCalloutData_Tooltip;                   // 0x0130(0x0018)()
	class FText                                   CallFunc_GetCalloutData_AdditionalText;            // 0x0148(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Map_Find_Value;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PlayerCallout_C*                     CallFunc_Create_ReturnValue;                       // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_EndRound_C_FillPlayerCallouts) == 0x000008, "Wrong alignment on W_EndRound_C_FillPlayerCallouts");
static_assert(sizeof(W_EndRound_C_FillPlayerCallouts) == 0x000188, "Wrong size on W_EndRound_C_FillPlayerCallouts");
static_assert(offsetof(W_EndRound_C_FillPlayerCallouts, WidgetsMap) == 0x000000, "Member 'W_EndRound_C_FillPlayerCallouts::WidgetsMap' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_FillPlayerCallouts, Temp_int_Array_Index_Variable) == 0x000050, "Member 'W_EndRound_C_FillPlayerCallouts::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_FillPlayerCallouts, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'W_EndRound_C_FillPlayerCallouts::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_FillPlayerCallouts, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'W_EndRound_C_FillPlayerCallouts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_FillPlayerCallouts, K2Node_MakeVariable_MakeVariableOutput) == 0x000060, "Member 'W_EndRound_C_FillPlayerCallouts::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_FillPlayerCallouts, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'W_EndRound_C_FillPlayerCallouts::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_FillPlayerCallouts, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'W_EndRound_C_FillPlayerCallouts::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_FillPlayerCallouts, CallFunc_GetCalloutData_Title) == 0x0000D0, "Member 'W_EndRound_C_FillPlayerCallouts::CallFunc_GetCalloutData_Title' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_FillPlayerCallouts, CallFunc_GetCalloutData_Flag) == 0x0000E8, "Member 'W_EndRound_C_FillPlayerCallouts::CallFunc_GetCalloutData_Flag' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_FillPlayerCallouts, CallFunc_GetCalloutData_Name) == 0x000110, "Member 'W_EndRound_C_FillPlayerCallouts::CallFunc_GetCalloutData_Name' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_FillPlayerCallouts, CallFunc_GetCalloutData_Valid) == 0x000128, "Member 'W_EndRound_C_FillPlayerCallouts::CallFunc_GetCalloutData_Valid' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_FillPlayerCallouts, CallFunc_GetCalloutData_Tooltip) == 0x000130, "Member 'W_EndRound_C_FillPlayerCallouts::CallFunc_GetCalloutData_Tooltip' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_FillPlayerCallouts, CallFunc_GetCalloutData_AdditionalText) == 0x000148, "Member 'W_EndRound_C_FillPlayerCallouts::CallFunc_GetCalloutData_AdditionalText' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_FillPlayerCallouts, CallFunc_Less_IntInt_ReturnValue) == 0x000160, "Member 'W_EndRound_C_FillPlayerCallouts::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_FillPlayerCallouts, CallFunc_Map_Find_Value) == 0x000168, "Member 'W_EndRound_C_FillPlayerCallouts::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_FillPlayerCallouts, CallFunc_Map_Find_ReturnValue) == 0x000170, "Member 'W_EndRound_C_FillPlayerCallouts::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_FillPlayerCallouts, CallFunc_Create_ReturnValue) == 0x000178, "Member 'W_EndRound_C_FillPlayerCallouts::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_FillPlayerCallouts, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000180, "Member 'W_EndRound_C_FillPlayerCallouts::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");

// Function W_EndRound.W_EndRound_C.GetCalloutData
// 0x0740 (0x0740 - 0x0000)
struct W_EndRound_C_GetCalloutData final
{
public:
	struct FSQPlayerCalloutScore                  PlayerCallout;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	class FText                                   Title;                                             // 0x0018(0x0018)(Parm, OutParm)
	TSoftObjectPtr<class UTexture2D>              Flag;                                              // 0x0030(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x0058(0x0018)(Parm, OutParm)
	bool                                          Valid;                                             // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Tooltip;                                           // 0x0078(0x0018)(Parm, OutParm)
	class FText                                   AdditionalText;                                    // 0x0090(0x0018)(Parm, OutParm)
	class FText                                   OutAdditionalText;                                 // 0x00A8(0x0018)(Edit, BlueprintVisible)
	class FText                                   OutToolTip;                                        // 0x00C0(0x0018)(Edit, BlueprintVisible)
	TSoftObjectPtr<class UTexture2D>              OutFlag;                                           // 0x00D8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         TeamId;                                            // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OutName;                                           // 0x0108(0x0018)(Edit, BlueprintVisible)
	class FText                                   OutText;                                           // 0x0120(0x0018)(Edit, BlueprintVisible)
	class ASQSquadState*                          K2Node_DynamicCast_AsSQSquad_State;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0158(0x0018)()
	class FString                                 CallFunc_GetFullPlayerName_ReturnValue;            // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0180(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value;           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQTeamState*                           CallFunc_Array_Get_Item;                           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SQFactionSetup_C*                   K2Node_DynamicCast_AsBP_SQFaction_Setup;           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetFactionEntry_Success;               // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQFactionEntry                        CallFunc_TryGetFactionEntry_FactionEntry;          // 0x01C0(0x0580)(HasGetValueTypeHash)
};
static_assert(alignof(W_EndRound_C_GetCalloutData) == 0x000008, "Wrong alignment on W_EndRound_C_GetCalloutData");
static_assert(sizeof(W_EndRound_C_GetCalloutData) == 0x000740, "Wrong size on W_EndRound_C_GetCalloutData");
static_assert(offsetof(W_EndRound_C_GetCalloutData, PlayerCallout) == 0x000000, "Member 'W_EndRound_C_GetCalloutData::PlayerCallout' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, Title) == 0x000018, "Member 'W_EndRound_C_GetCalloutData::Title' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, Flag) == 0x000030, "Member 'W_EndRound_C_GetCalloutData::Flag' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, Name_0) == 0x000058, "Member 'W_EndRound_C_GetCalloutData::Name_0' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, Valid) == 0x000070, "Member 'W_EndRound_C_GetCalloutData::Valid' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, Tooltip) == 0x000078, "Member 'W_EndRound_C_GetCalloutData::Tooltip' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, AdditionalText) == 0x000090, "Member 'W_EndRound_C_GetCalloutData::AdditionalText' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, OutAdditionalText) == 0x0000A8, "Member 'W_EndRound_C_GetCalloutData::OutAdditionalText' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, OutToolTip) == 0x0000C0, "Member 'W_EndRound_C_GetCalloutData::OutToolTip' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, OutFlag) == 0x0000D8, "Member 'W_EndRound_C_GetCalloutData::OutFlag' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, TeamId) == 0x000100, "Member 'W_EndRound_C_GetCalloutData::TeamId' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, OutName) == 0x000108, "Member 'W_EndRound_C_GetCalloutData::OutName' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, OutText) == 0x000120, "Member 'W_EndRound_C_GetCalloutData::OutText' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, K2Node_DynamicCast_AsSQSquad_State) == 0x000138, "Member 'W_EndRound_C_GetCalloutData::K2Node_DynamicCast_AsSQSquad_State' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'W_EndRound_C_GetCalloutData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, K2Node_DynamicCast_AsSQPlayer_State) == 0x000148, "Member 'W_EndRound_C_GetCalloutData::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, K2Node_DynamicCast_bSuccess_1) == 0x000150, "Member 'W_EndRound_C_GetCalloutData::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, CallFunc_Conv_IntToText_ReturnValue) == 0x000158, "Member 'W_EndRound_C_GetCalloutData::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, CallFunc_GetFullPlayerName_ReturnValue) == 0x000170, "Member 'W_EndRound_C_GetCalloutData::CallFunc_GetFullPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, CallFunc_Conv_StringToText_ReturnValue) == 0x000180, "Member 'W_EndRound_C_GetCalloutData::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000198, "Member 'W_EndRound_C_GetCalloutData::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, CallFunc_GetSquadGameState_Return_Value) == 0x0001A0, "Member 'W_EndRound_C_GetCalloutData::CallFunc_GetSquadGameState_Return_Value' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, CallFunc_Array_Get_Item) == 0x0001A8, "Member 'W_EndRound_C_GetCalloutData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, K2Node_DynamicCast_AsBP_SQFaction_Setup) == 0x0001B0, "Member 'W_EndRound_C_GetCalloutData::K2Node_DynamicCast_AsBP_SQFaction_Setup' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, K2Node_DynamicCast_bSuccess_2) == 0x0001B8, "Member 'W_EndRound_C_GetCalloutData::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, CallFunc_TryGetFactionEntry_Success) == 0x0001B9, "Member 'W_EndRound_C_GetCalloutData::CallFunc_TryGetFactionEntry_Success' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_GetCalloutData, CallFunc_TryGetFactionEntry_FactionEntry) == 0x0001C0, "Member 'W_EndRound_C_GetCalloutData::CallFunc_TryGetFactionEntry_FactionEntry' has a wrong offset!");

// Function W_EndRound.W_EndRound_C.UpdateTicketsIcon
// 0x0018 (0x0018 - 0x0000)
struct W_EndRound_C_UpdateTicketsIcon final
{
public:
	float                                         CallFunc_BreakVector2D_X;                          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_EndRound_C_UpdateTicketsIcon) == 0x000004, "Wrong alignment on W_EndRound_C_UpdateTicketsIcon");
static_assert(sizeof(W_EndRound_C_UpdateTicketsIcon) == 0x000018, "Wrong size on W_EndRound_C_UpdateTicketsIcon");
static_assert(offsetof(W_EndRound_C_UpdateTicketsIcon, CallFunc_BreakVector2D_X) == 0x000000, "Member 'W_EndRound_C_UpdateTicketsIcon::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_UpdateTicketsIcon, CallFunc_BreakVector2D_Y) == 0x000004, "Member 'W_EndRound_C_UpdateTicketsIcon::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_UpdateTicketsIcon, K2Node_MakeStruct_Margin) == 0x000008, "Member 'W_EndRound_C_UpdateTicketsIcon::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function W_EndRound.W_EndRound_C.UpdateTeamTicketsCount
// 0x0040 (0x0040 - 0x0000)
struct W_EndRound_C_UpdateTeamTicketsCount final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0028(0x0018)()
};
static_assert(alignof(W_EndRound_C_UpdateTeamTicketsCount) == 0x000008, "Wrong alignment on W_EndRound_C_UpdateTeamTicketsCount");
static_assert(sizeof(W_EndRound_C_UpdateTeamTicketsCount) == 0x000040, "Wrong size on W_EndRound_C_UpdateTeamTicketsCount");
static_assert(offsetof(W_EndRound_C_UpdateTeamTicketsCount, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_EndRound_C_UpdateTeamTicketsCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_UpdateTeamTicketsCount, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000001, "Member 'W_EndRound_C_UpdateTeamTicketsCount::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_UpdateTeamTicketsCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'W_EndRound_C_UpdateTeamTicketsCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_UpdateTeamTicketsCount, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'W_EndRound_C_UpdateTeamTicketsCount::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_UpdateTeamTicketsCount, CallFunc_IsValid_ReturnValue_2) == 0x000021, "Member 'W_EndRound_C_UpdateTeamTicketsCount::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_UpdateTeamTicketsCount, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000022, "Member 'W_EndRound_C_UpdateTeamTicketsCount::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_EndRound_C_UpdateTeamTicketsCount, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000028, "Member 'W_EndRound_C_UpdateTeamTicketsCount::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");

}

