#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_TimelineTooltipElement

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UMG_TimelineTooltipElement.UMG_TimelineTooltipElement_C.ExecuteUbergraph_UMG_TimelineTooltipElement
// 0x000C (0x000C - 0x0000)
struct UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement) == 0x000004, "Wrong alignment on UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement");
static_assert(sizeof(UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement) == 0x00000C, "Wrong size on UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement");
static_assert(offsetof(UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement, EntryPoint) == 0x000000, "Member 'UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement, Temp_bool_Variable) == 0x000004, "Member 'UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement, Temp_byte_Variable) == 0x000005, "Member 'UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement, Temp_byte_Variable_1) == 0x000006, "Member 'UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement, Temp_bool_Variable_1) == 0x000007, "Member 'UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement, Temp_byte_Variable_2) == 0x000008, "Member 'UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement, Temp_byte_Variable_3) == 0x000009, "Member 'UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement, K2Node_Select_Default) == 0x00000A, "Member 'UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement, K2Node_Select_Default_1) == 0x00000B, "Member 'UMG_TimelineTooltipElement_C_ExecuteUbergraph_UMG_TimelineTooltipElement::K2Node_Select_Default_1' has a wrong offset!");

// Function UMG_TimelineTooltipElement.UMG_TimelineTooltipElement_C.Update
// 0x0038 (0x0038 - 0x0000)
struct UMG_TimelineTooltipElement_C_Update final
{
public:
	class FText                                   NewText;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Tickets;                                           // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
};
static_assert(alignof(UMG_TimelineTooltipElement_C_Update) == 0x000008, "Wrong alignment on UMG_TimelineTooltipElement_C_Update");
static_assert(sizeof(UMG_TimelineTooltipElement_C_Update) == 0x000038, "Wrong size on UMG_TimelineTooltipElement_C_Update");
static_assert(offsetof(UMG_TimelineTooltipElement_C_Update, NewText) == 0x000000, "Member 'UMG_TimelineTooltipElement_C_Update::NewText' has a wrong offset!");
static_assert(offsetof(UMG_TimelineTooltipElement_C_Update, Tickets) == 0x000018, "Member 'UMG_TimelineTooltipElement_C_Update::Tickets' has a wrong offset!");
static_assert(offsetof(UMG_TimelineTooltipElement_C_Update, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'UMG_TimelineTooltipElement_C_Update::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function UMG_TimelineTooltipElement.UMG_TimelineTooltipElement_C.ChangeColor
// 0x0010 (0x0010 - 0x0000)
struct UMG_TimelineTooltipElement_C_ChangeColor final
{
public:
	struct FLinearColor                           NewColor;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_TimelineTooltipElement_C_ChangeColor) == 0x000004, "Wrong alignment on UMG_TimelineTooltipElement_C_ChangeColor");
static_assert(sizeof(UMG_TimelineTooltipElement_C_ChangeColor) == 0x000010, "Wrong size on UMG_TimelineTooltipElement_C_ChangeColor");
static_assert(offsetof(UMG_TimelineTooltipElement_C_ChangeColor, NewColor) == 0x000000, "Member 'UMG_TimelineTooltipElement_C_ChangeColor::NewColor' has a wrong offset!");

// Function UMG_TimelineTooltipElement.UMG_TimelineTooltipElement_C.ChangeTextValue
// 0x0018 (0x0018 - 0x0000)
struct UMG_TimelineTooltipElement_C_ChangeTextValue final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(UMG_TimelineTooltipElement_C_ChangeTextValue) == 0x000008, "Wrong alignment on UMG_TimelineTooltipElement_C_ChangeTextValue");
static_assert(sizeof(UMG_TimelineTooltipElement_C_ChangeTextValue) == 0x000018, "Wrong size on UMG_TimelineTooltipElement_C_ChangeTextValue");
static_assert(offsetof(UMG_TimelineTooltipElement_C_ChangeTextValue, InText) == 0x000000, "Member 'UMG_TimelineTooltipElement_C_ChangeTextValue::InText' has a wrong offset!");

}

