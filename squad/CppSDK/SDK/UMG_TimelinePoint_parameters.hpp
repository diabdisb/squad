#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_TimelinePoint

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UMG_TimelinePoint.UMG_TimelinePoint_C.ExecuteUbergraph_UMG_TimelinePoint
// 0x0008 (0x0008 - 0x0000)
struct UMG_TimelinePoint_C_ExecuteUbergraph_UMG_TimelinePoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_TimelinePoint_C_ExecuteUbergraph_UMG_TimelinePoint) == 0x000004, "Wrong alignment on UMG_TimelinePoint_C_ExecuteUbergraph_UMG_TimelinePoint");
static_assert(sizeof(UMG_TimelinePoint_C_ExecuteUbergraph_UMG_TimelinePoint) == 0x000008, "Wrong size on UMG_TimelinePoint_C_ExecuteUbergraph_UMG_TimelinePoint");
static_assert(offsetof(UMG_TimelinePoint_C_ExecuteUbergraph_UMG_TimelinePoint, EntryPoint) == 0x000000, "Member 'UMG_TimelinePoint_C_ExecuteUbergraph_UMG_TimelinePoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_TimelinePoint_C_ExecuteUbergraph_UMG_TimelinePoint, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UMG_TimelinePoint_C_ExecuteUbergraph_UMG_TimelinePoint::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UMG_TimelinePoint.UMG_TimelinePoint_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UMG_TimelinePoint_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_TimelinePoint_C_PreConstruct) == 0x000001, "Wrong alignment on UMG_TimelinePoint_C_PreConstruct");
static_assert(sizeof(UMG_TimelinePoint_C_PreConstruct) == 0x000001, "Wrong size on UMG_TimelinePoint_C_PreConstruct");
static_assert(offsetof(UMG_TimelinePoint_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UMG_TimelinePoint_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UMG_TimelinePoint.UMG_TimelinePoint_C.SetMarked
// 0x0001 (0x0001 - 0x0000)
struct UMG_TimelinePoint_C_SetMarked final
{
public:
	bool                                          bNewMarked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_TimelinePoint_C_SetMarked) == 0x000001, "Wrong alignment on UMG_TimelinePoint_C_SetMarked");
static_assert(sizeof(UMG_TimelinePoint_C_SetMarked) == 0x000001, "Wrong size on UMG_TimelinePoint_C_SetMarked");
static_assert(offsetof(UMG_TimelinePoint_C_SetMarked, bNewMarked) == 0x000000, "Member 'UMG_TimelinePoint_C_SetMarked::bNewMarked' has a wrong offset!");

// Function UMG_TimelinePoint.UMG_TimelinePoint_C.ChangeColor
// 0x0010 (0x0010 - 0x0000)
struct UMG_TimelinePoint_C_ChangeColor final
{
public:
	struct FLinearColor                           NewColor;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_TimelinePoint_C_ChangeColor) == 0x000004, "Wrong alignment on UMG_TimelinePoint_C_ChangeColor");
static_assert(sizeof(UMG_TimelinePoint_C_ChangeColor) == 0x000010, "Wrong size on UMG_TimelinePoint_C_ChangeColor");
static_assert(offsetof(UMG_TimelinePoint_C_ChangeColor, NewColor) == 0x000000, "Member 'UMG_TimelinePoint_C_ChangeColor::NewColor' has a wrong offset!");

}

